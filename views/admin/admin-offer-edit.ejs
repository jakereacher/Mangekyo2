<%- include("partials/header", { activePage: 'offers' }) %>

<div class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
  <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Edit Offer</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
      <a href="/admin/offers" class="btn btn-sm btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Back to Offers
      </a>
    </div>
  </div>

  <% if (error && error.length > 0) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <div class="card">
    <div class="card-body">
      <form action="/admin/offers/update/<%= offer._id %>" method="POST">
        <div class="row mb-3">
          <div class="col-md-6">
            <label for="name" class="form-label">Offer Name <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="name" name="name" value="<%= offer.name %>" required>
          </div>
          <div class="col-md-6">
            <label for="type" class="form-label">Offer Type <span class="text-danger">*</span></label>
            <select class="form-select" id="type" name="type" required>
              <option value="">Select Offer Type</option>
              <option value="product" <%= offer.type === 'product' ? 'selected' : '' %>>Product Offer</option>
              <option value="category" <%= offer.type === 'category' ? 'selected' : '' %>>Category Offer</option>
              <option value="referral" <%= offer.type === 'referral' ? 'selected' : '' %>>Referral Offer</option>
            </select>
          </div>
        </div>

        <div class="mb-3">
          <label for="description" class="form-label">Description <span class="text-danger">*</span></label>
          <textarea class="form-control" id="description" name="description" rows="3" required><%= offer.description %></textarea>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label for="discountType" class="form-label">Discount Type <span class="text-danger">*</span></label>
            <select class="form-select" id="discountType" name="discountType" required>
              <option value="">Select Discount Type</option>
              <option value="percentage" <%= offer.discountType === 'percentage' ? 'selected' : '' %>>Percentage</option>
              <option value="fixed" <%= offer.discountType === 'fixed' ? 'selected' : '' %>>Fixed Amount</option>
            </select>
          </div>
          <div class="col-md-6">
            <label for="discountValue" class="form-label">Discount Value <span class="text-danger">*</span></label>
            <input type="number" class="form-control" id="discountValue" name="discountValue" min="0" step="0.01" value="<%= offer.discountValue %>" required>
            <small class="form-text text-muted">For percentage, enter value between 0-100</small>
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label for="maxDiscountAmount" class="form-label">Maximum Discount Amount</label>
            <input type="number" class="form-control" id="maxDiscountAmount" name="maxDiscountAmount" min="0" step="0.01" value="<%= offer.maxDiscountAmount || '' %>">
            <small class="form-text text-muted">Only applicable for percentage discounts</small>
          </div>
          <div class="col-md-6">
            <label for="minPurchaseAmount" class="form-label">Minimum Purchase Amount</label>
            <input type="number" class="form-control" id="minPurchaseAmount" name="minPurchaseAmount" min="0" step="0.01" value="<%= offer.minPurchaseAmount || '' %>">
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label for="startDate" class="form-label">Start Date <span class="text-danger">*</span></label>
            <input type="date" class="form-control" id="startDate" name="startDate" value="<%= offer.startDateFormatted %>" required>
          </div>
          <div class="col-md-6">
            <label for="endDate" class="form-label">End Date <span class="text-danger">*</span></label>
            <input type="date" class="form-control" id="endDate" name="endDate" value="<%= offer.endDateFormatted %>" required>
          </div>
        </div>

        <div class="mb-3 form-check">
          <input type="checkbox" class="form-check-input" id="isActive" name="isActive" <%= offer.isActive ? 'checked' : '' %>>
          <label class="form-check-label" for="isActive">Active</label>
        </div>

        <!-- Product Selection (shown only for product offers) -->
        <div class="mb-4 product-selection" style="display: <%= offer.type === 'product' ? 'block' : 'none' %>;">
          <label class="form-label fw-bold">Select Products <span class="text-danger">*</span></label>

          <div class="mb-3">
            <input type="text" class="form-control" id="productSearch" placeholder="Search products by name...">
          </div>

          <div class="card">
            <div class="card-header bg-light">
              <div class="d-flex justify-content-between align-items-center">
                <span>Available Products</span>
                <div>
                  <button type="button" class="btn btn-sm btn-outline-primary select-all-products">Select All</button>
                  <button type="button" class="btn btn-sm btn-outline-secondary clear-all-products">Clear All</button>
                </div>
              </div>
            </div>
            <div class="card-body" style="max-height: 300px; overflow-y: auto;">
              <div class="row" id="productList">
                <% products.forEach(product => { %>
                  <div class="col-md-6 mb-2 product-item">
                    <div class="form-check">
                      <input class="form-check-input product-checkbox" type="checkbox"
                        value="<%= product._id %>"
                        id="product_<%= product._id %>"
                        name="applicableProducts"
                        <%= offer.applicableProducts && offer.applicableProducts.some(p => p.toString() === product._id.toString()) ? 'checked' : '' %>>
                      <label class="form-check-label d-flex justify-content-between" for="product_<%= product._id %>">
                        <span class="product-name"><%= product.productName %></span>
                        <span class="text-primary">$<%= product.salePrice %></span>
                      </label>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>
            <div class="card-footer bg-light">
              <span id="selectedProductsCount">0</span> products selected
            </div>
          </div>

          <div class="mt-3" id="productOfferPreview" style="display: none;">
            <div class="card border-success">
              <div class="card-header bg-success text-white">
                Offer Preview
              </div>
              <div class="card-body">
                <div class="row">
                  <div class="col-md-6">
                    <h6>Sample Product:</h6>
                    <div id="sampleProductName"></div>
                    <div>Original Price: $<span id="sampleProductPrice"></span></div>
                  </div>
                  <div class="col-md-6">
                    <h6>After Offer:</h6>
                    <div>Discount: <span id="sampleProductDiscount"></span></div>
                    <div>Final Price: $<span id="sampleProductFinalPrice" class="text-success fw-bold"></span></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Category Selection (shown only for category offers) -->
        <div class="mb-4 category-selection" style="display: <%= offer.type === 'category' ? 'block' : 'none' %>;">
          <label class="form-label fw-bold">Select Categories <span class="text-danger">*</span></label>

          <div class="mb-3">
            <input type="text" class="form-control" id="categorySearch" placeholder="Search categories by name...">
          </div>

          <div class="card">
            <div class="card-header bg-light">
              <div class="d-flex justify-content-between align-items-center">
                <span>Available Categories</span>
                <div>
                  <button type="button" class="btn btn-sm btn-outline-primary select-all-categories">Select All</button>
                  <button type="button" class="btn btn-sm btn-outline-secondary clear-all-categories">Clear All</button>
                </div>
              </div>
            </div>
            <div class="card-body" style="max-height: 300px; overflow-y: auto;">
              <div class="row" id="categoryList">
                <% categories.forEach(category => { %>
                  <div class="col-md-6 mb-2 category-item">
                    <div class="form-check">
                      <input class="form-check-input category-checkbox" type="checkbox"
                        value="<%= category._id %>"
                        id="category_<%= category._id %>"
                        name="applicableCategories"
                        <%= offer.applicableCategories && offer.applicableCategories.some(c => c.toString() === category._id.toString()) ? 'checked' : '' %>>
                      <label class="form-check-label" for="category_<%= category._id %>">
                        <%= category.name %>
                      </label>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>
            <div class="card-footer bg-light">
              <span id="selectedCategoriesCount">0</span> categories selected
            </div>
          </div>

          <div class="mt-3" id="categoryOfferPreview" style="display: none;">
            <div class="card border-success">
              <div class="card-header bg-success text-white">
                Offer Preview
              </div>
              <div class="card-body">
                <p>This offer will apply to all products in the selected categories.</p>
                <p>For example, if a product costs $1000:</p>
                <ul>
                  <li>Discount: <span id="categoryDiscountExample"></span></li>
                  <li>Final Price: $<span id="categoryFinalPriceExample" class="text-success fw-bold"></span></li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
          <button type="submit" class="btn btn-primary">Update Offer</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const typeSelect = document.getElementById('type');
    const discountTypeSelect = document.getElementById('discountType');
    const discountValueInput = document.getElementById('discountValue');
    const maxDiscountAmountInput = document.getElementById('maxDiscountAmount');
    const productSelection = document.querySelector('.product-selection');
    const categorySelection = document.querySelector('.category-selection');

    // Product selection elements
    const productSearch = document.getElementById('productSearch');
    const productItems = document.querySelectorAll('.product-item');
    const productCheckboxes = document.querySelectorAll('.product-checkbox');
    const selectAllProductsBtn = document.querySelector('.select-all-products');
    const clearAllProductsBtn = document.querySelector('.clear-all-products');
    const selectedProductsCount = document.getElementById('selectedProductsCount');
    const productOfferPreview = document.getElementById('productOfferPreview');

    // Category selection elements
    const categorySearch = document.getElementById('categorySearch');
    const categoryItems = document.querySelectorAll('.category-item');
    const categoryCheckboxes = document.querySelectorAll('.category-checkbox');
    const selectAllCategoriesBtn = document.querySelector('.select-all-categories');
    const clearAllCategoriesBtn = document.querySelector('.clear-all-categories');
    const selectedCategoriesCount = document.getElementById('selectedCategoriesCount');
    const categoryOfferPreview = document.getElementById('categoryOfferPreview');

    // Initialize counters
    updateProductSelectionCount();
    updateCategorySelectionCount();

    // Initialize offer previews
    if (typeSelect.value === 'product') {
      updateProductOfferPreview();
    } else if (typeSelect.value === 'category') {
      updateCategoryOfferPreview();
    }

    // Set min date for end date to start date
    document.getElementById('startDate').addEventListener('change', function() {
      document.getElementById('endDate').min = this.value;
    });

    // Show/hide product/category selection based on offer type
    typeSelect.addEventListener('change', function() {
      productSelection.style.display = 'none';
      categorySelection.style.display = 'none';

      if (this.value === 'product') {
        productSelection.style.display = 'block';
        updateProductSelectionCount();
        updateProductOfferPreview();
      } else if (this.value === 'category') {
        categorySelection.style.display = 'block';
        updateCategorySelectionCount();
        updateCategoryOfferPreview();
      }
    });

    // Show/hide max discount amount based on discount type
    // Initial state
    if (discountTypeSelect.value === 'fixed') {
      maxDiscountAmountInput.parentElement.style.display = 'none';
    }

    discountTypeSelect.addEventListener('change', function() {
      if (this.value === 'percentage') {
        maxDiscountAmountInput.parentElement.style.display = 'block';
      } else {
        maxDiscountAmountInput.parentElement.style.display = 'none';
        maxDiscountAmountInput.value = '';
      }
      updateProductOfferPreview();
      updateCategoryOfferPreview();
    });

    // Update offer preview when discount value changes
    discountValueInput.addEventListener('input', function() {
      updateProductOfferPreview();
      updateCategoryOfferPreview();
    });

    // Update offer preview when max discount amount changes
    maxDiscountAmountInput.addEventListener('input', function() {
      updateProductOfferPreview();
      updateCategoryOfferPreview();
    });

    // Product search functionality
    productSearch.addEventListener('input', function() {
      const searchTerm = this.value.toLowerCase();

      productItems.forEach(item => {
        const productName = item.querySelector('.product-name').textContent.toLowerCase();
        if (productName.includes(searchTerm)) {
          item.style.display = '';
        } else {
          item.style.display = 'none';
        }
      });
    });

    // Category search functionality
    categorySearch.addEventListener('input', function() {
      const searchTerm = this.value.toLowerCase();

      categoryItems.forEach(item => {
        const categoryName = item.querySelector('.form-check-label').textContent.trim().toLowerCase();
        if (categoryName.includes(searchTerm)) {
          item.style.display = '';
        } else {
          item.style.display = 'none';
        }
      });
    });

    // Select all products
    selectAllProductsBtn.addEventListener('click', function() {
      productCheckboxes.forEach(checkbox => {
        const item = checkbox.closest('.product-item');
        if (item.style.display !== 'none') {
          checkbox.checked = true;
        }
      });
      updateProductSelectionCount();
      updateProductOfferPreview();
    });

    // Clear all products
    clearAllProductsBtn.addEventListener('click', function() {
      productCheckboxes.forEach(checkbox => {
        checkbox.checked = false;
      });
      updateProductSelectionCount();
      updateProductOfferPreview();
    });

    // Select all categories
    selectAllCategoriesBtn.addEventListener('click', function() {
      categoryCheckboxes.forEach(checkbox => {
        const item = checkbox.closest('.category-item');
        if (item.style.display !== 'none') {
          checkbox.checked = true;
        }
      });
      updateCategorySelectionCount();
      updateCategoryOfferPreview();
    });

    // Clear all categories
    clearAllCategoriesBtn.addEventListener('click', function() {
      categoryCheckboxes.forEach(checkbox => {
        checkbox.checked = false;
      });
      updateCategorySelectionCount();
      updateCategoryOfferPreview();
    });

    // Update product selection count when checkboxes change
    productCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        updateProductSelectionCount();
        updateProductOfferPreview();
      });
    });

    // Update category selection count when checkboxes change
    categoryCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        updateCategorySelectionCount();
        updateCategoryOfferPreview();
      });
    });

    // Function to update product selection count
    function updateProductSelectionCount() {
      const selectedCount = document.querySelectorAll('.product-checkbox:checked').length;
      selectedProductsCount.textContent = selectedCount;

      // Form validation - at least one product must be selected
      const submitBtn = document.querySelector('button[type="submit"]');
      if (typeSelect.value === 'product' && selectedCount === 0) {
        submitBtn.disabled = true;
      } else {
        submitBtn.disabled = false;
      }
    }

    // Function to update category selection count
    function updateCategorySelectionCount() {
      const selectedCount = document.querySelectorAll('.category-checkbox:checked').length;
      selectedCategoriesCount.textContent = selectedCount;

      // Form validation - at least one category must be selected
      const submitBtn = document.querySelector('button[type="submit"]');
      if (typeSelect.value === 'category' && selectedCount === 0) {
        submitBtn.disabled = true;
      } else {
        submitBtn.disabled = false;
      }
    }

    // Function to update product offer preview
    function updateProductOfferPreview() {
      const selectedProducts = document.querySelectorAll('.product-checkbox:checked');

      if (selectedProducts.length > 0 && discountValueInput.value && discountTypeSelect.value) {
        // Get a sample product (first selected)
        const sampleProductId = selectedProducts[0].value;
        const sampleProductElement = document.getElementById(`product_${sampleProductId}`).closest('.product-item');
        const sampleProductName = sampleProductElement.querySelector('.product-name').textContent;
        const sampleProductPrice = parseFloat(sampleProductElement.querySelector('.text-primary').textContent.replace('$', ''));

        // Calculate discount
        let discountAmount = 0;
        const discountValue = parseFloat(discountValueInput.value);

        if (discountTypeSelect.value === 'percentage') {
          discountAmount = (sampleProductPrice * discountValue) / 100;

          // Apply max discount cap if specified
          const maxDiscountAmount = parseFloat(maxDiscountAmountInput.value);
          if (!isNaN(maxDiscountAmount) && discountAmount > maxDiscountAmount) {
            discountAmount = maxDiscountAmount;
          }
        } else {
          discountAmount = discountValue;

          // Ensure discount doesn't exceed the price
          if (discountAmount > sampleProductPrice) {
            discountAmount = sampleProductPrice;
          }
        }

        const finalPrice = sampleProductPrice - discountAmount;

        // Update preview
        document.getElementById('sampleProductName').textContent = sampleProductName;
        document.getElementById('sampleProductPrice').textContent = sampleProductPrice.toFixed(2);

        if (discountTypeSelect.value === 'percentage') {
          document.getElementById('sampleProductDiscount').textContent = `${discountValue}% (₹${discountAmount.toFixed(2)})`;
        } else {
          document.getElementById('sampleProductDiscount').textContent = `₹${discountAmount.toFixed(2)}`;
        }

        document.getElementById('sampleProductFinalPrice').textContent = finalPrice.toFixed(2);

        productOfferPreview.style.display = 'block';
      } else {
        productOfferPreview.style.display = 'none';
      }
    }

    // Function to update category offer preview
    function updateCategoryOfferPreview() {
      const selectedCategories = document.querySelectorAll('.category-checkbox:checked');

      if (selectedCategories.length > 0 && discountValueInput.value && discountTypeSelect.value) {
        // Use a sample price of 1000 for demonstration
        const samplePrice = 1000;

        // Calculate discount
        let discountAmount = 0;
        const discountValue = parseFloat(discountValueInput.value);

        if (discountTypeSelect.value === 'percentage') {
          discountAmount = (samplePrice * discountValue) / 100;

          // Apply max discount cap if specified
          const maxDiscountAmount = parseFloat(maxDiscountAmountInput.value);
          if (!isNaN(maxDiscountAmount) && discountAmount > maxDiscountAmount) {
            discountAmount = maxDiscountAmount;
          }

          document.getElementById('categoryDiscountExample').textContent = `${discountValue}% (₹${discountAmount.toFixed(2)})`;
        } else {
          discountAmount = discountValue;

          // Ensure discount doesn't exceed the price
          if (discountAmount > samplePrice) {
            discountAmount = samplePrice;
          }

          document.getElementById('categoryDiscountExample').textContent = `₹${discountAmount.toFixed(2)}`;
        }

        const finalPrice = samplePrice - discountAmount;
        document.getElementById('categoryFinalPriceExample').textContent = finalPrice.toFixed(2);

        categoryOfferPreview.style.display = 'block';
      } else {
        categoryOfferPreview.style.display = 'none';
      }
    }
  });
</script>

<%- include("partials/footer") %>
