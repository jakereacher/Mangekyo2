<%- include("./partials/header", { activePage: 'products' }) %>

<style>
    .existing-image {
        transition: transform 0.2s ease;
    }
    .existing-image:hover {
        transform: scale(1.05);
    }
    .image-preview {
        border: 2px dashed #dee2e6;
        border-radius: 8px;
    }
    .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
    .card-header {
        border-bottom: 1px solid #dee2e6;
    }
    .form-label {
        font-weight: 500;
        color: #495057;
    }
    .btn-danger:hover {
        transform: scale(1.1);
    }
    .thumbnails-container {
        min-height: 60px;
    }
    .alert-info {
        background-color: #e7f3ff;
        border-color: #b8daff;
        color: #004085;
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<style>
    .error-message {
        color: red;
    }
    .thumbnails-container {
        display: flex;
        overflow-x: auto;
        gap: 10px;
        padding: 10px 0;
    }
    .thumbnail {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border: 1px solid #ddd;
    }
    .image-preview {
        max-width: 200px;
        max-height: 200px;
        width: auto;
        height: auto;
        margin-bottom: 10px;
        display: none;
        object-fit: contain;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    .image-cropper {
        max-width: 300px;
        max-height: 300px;
        margin: 10px 0;
    }
    .cropper-container {
        position: relative;
        max-width: 100%;
        height: 300px;
    }
    .existing-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        margin-right: 10px;
        border: 1px solid #ddd;
    }
</style>

<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product: <%= product.productName %></h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <% if (error) { %>
                        <div class="error-message"><%= error %></div>
                    <% } %>
                    <form method="POST" action="/admin/edit-product/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name <span class="text-danger">*</span></label>
                            <input type="text" placeholder="Enter product name" name="productName" class="form-control border" id="product_name" value="<%= product.productName %>" required>
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Product Description <span class="text-danger">*</span></label>
                            <textarea placeholder="Enter detailed product description" id="descriptionid" name="description" class="form-control border" rows="4" required><%= product.description %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="mb-4">
                                    <label class="form-label">Product Price <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text">₹</span>
                                        <input placeholder="Enter price (e.g., 999.99)" name="price" type="number" step="0.01" min="0" class="form-control border" value="<%= product.price %>" required>
                                    </div>
                                    <div id="price-error" class="error-message"></div>
                                    <% if (product.productOffer && product.offerPercentage > 0) { %>
                                        <div class="mt-2 alert alert-info">
                                            <strong>Offer Applied:</strong> <%= product.offerPercentage %>% off
                                            <div>Original Price: ₹<%= Math.round(product.price) %></div>
                                            <div>Final Price: ₹<%= Math.round(product.finalPrice) %></div>
                                            <small>Note: Changing the price will recalculate the final price with the current offer.</small>
                                        </div>
                                    <% } else { %>
                                        <small class="form-text text-muted">
                                            Note: If an offer is applied, the price will be automatically discounted.
                                        </small>
                                    <% } %>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="mb-4">
                                    <label class="form-label">Stock Quantity <span class="text-danger">*</span></label>
                                    <input placeholder="Enter available quantity" name="quantity" type="number" min="0" step="1" class="form-control border" value="<%= product.quantity %>" required>
                                    <small class="form-text text-muted">Enter 0 if out of stock</small>
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">Product Category</h5>
                            </div>
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-8 mb-3">
                                        <label class="form-label">Select Category <span class="text-danger">*</span></label>
                                        <select class="form-select border" name="category" required>
                                            <option value="">-- Select a Category --</option>
                                            <% categories.forEach(cat => { %>
                                                <option value="<%= cat.name %>" <%= cat.name === product.category.name ? 'selected' : '' %>>
                                                    <%= cat.name %>
                                                </option>
                                            <% }) %>
                                        </select>
                                        <small class="form-text text-muted">Choose the most appropriate category for this product</small>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-3">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">
                                    <i class="fas fa-images me-2"></i>Current Product Images
                                </h5>
                                <small class="text-muted">Click the × button to remove an image</small>
                            </div>
                            <div class="card-body">
                                <% if (product.productImage && product.productImage.length > 0) { %>
                                    <div class="thumbnails-container">
                                        <% product.productImage.forEach((img, index) => { %>
                                            <div class="position-relative d-inline-block me-3 mb-3" id="image-container-<%= index %>">
                                                <img src="/uploads/product-images/<%= img %>"
                                                     class="existing-image border rounded"
                                                     alt="Product Image <%= index + 1 %>"
                                                     style="width: 120px; height: 120px; object-fit: cover;">
                                                <button type="button"
                                                        class="btn btn-sm btn-danger position-absolute"
                                                        style="top: -5px; right: -5px; border-radius: 50%; width: 25px; height: 25px; padding: 0; display: flex; align-items: center; justify-content: center;"
                                                        onclick="removeImage(<%= index %>, '<%= img %>')"
                                                        title="Remove this image">
                                                    <i class="fas fa-times" style="font-size: 12px;"></i>
                                                </button>
                                                <input type="hidden" name="existingImages[]" value="<%= img %>">
                                                <div class="text-center mt-1">
                                                    <small class="text-muted">Image <%= index + 1 %></small>
                                                </div>
                                            </div>
                                        <% }) %>
                                    </div>
                                <% } else { %>
                                    <div class="text-center py-4">
                                        <i class="fas fa-image fa-3x text-muted mb-3"></i>
                                        <p class="text-muted">No images available</p>
                                    </div>
                                <% } %>
                                <!-- Hidden input to track removed images -->
                                <input type="hidden" id="removedImages" name="removedImages" value="">
                                <div class="alert alert-warning mt-3" style="display: none;" id="image-warning">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Warning:</strong> Product must have at least one image.
                                </div>
                            </div>
                        </div>
                        <div class="card mb-3">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">
                                    <i class="fas fa-plus-circle me-2"></i>Add New Images (Optional)
                                </h5>
                                <small class="text-muted">Upload additional product images (JPG, PNG only)</small>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong>Image Guidelines:</strong>
                                    <ul class="mb-0 mt-2">
                                        <li>Recommended size: 440x440 pixels</li>
                                        <li>Supported formats: JPG, PNG</li>
                                        <li>Maximum file size: 5MB per image</li>
                                        <li>Use high-quality images for better customer experience</li>
                                    </ul>
                                </div>
                                <div class="thumbnails-container mb-3" id="addedImagesContainer"></div>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Additional Image 1</label>
                                        <input class="form-control" type="file" name="image1" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                        <img src="" class="image-preview mt-2" id="imgView1" alt="Preview" style="display: none; max-width: 100px; max-height: 100px; border-radius: 5px;">
                                        <div class="image-cropper" id="cropperContainer1" style="display:none;">
                                            <img src="" id="croppedImg1" alt="Cropper">
                                            <button type="button" id="saveButton1" class="btn btn-sm btn-primary mt-2"
                                                onclick="saveCroppedImage(1)">
                                                <i class="fas fa-crop me-1"></i>Save Crop
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Additional Image 2</label>
                                        <input class="form-control" type="file" name="image2" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                        <img src="" class="image-preview mt-2" id="imgView2" alt="Preview" style="display: none; max-width: 100px; max-height: 100px; border-radius: 5px;">
                                        <div class="image-cropper" id="cropperContainer2" style="display:none;">
                                            <img src="" id="croppedImg2" alt="Cropper">
                                            <button type="button" id="saveButton2" class="btn btn-sm btn-primary mt-2"
                                                onclick="saveCroppedImage(2)">
                                                <i class="fas fa-crop me-1"></i>Save Crop
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Additional Image 3</label>
                                        <input class="form-control" type="file" name="image3" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                        <img src="" class="image-preview mt-2" id="imgView3" alt="Preview" style="display: none; max-width: 100px; max-height: 100px; border-radius: 5px;">
                                        <div class="image-cropper" id="cropperContainer3" style="display:none;">
                                            <img src="" id="croppedImg3" alt="Cropper">
                                            <button type="button" id="saveButton3" class="btn btn-sm btn-primary mt-2"
                                                onclick="saveCroppedImage(3)">
                                                <i class="fas fa-crop me-1"></i>Save Crop
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Additional Image 4</label>
                                        <input class="form-control" type="file" name="image4" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                                        <img src="" class="image-preview mt-2" id="imgView4" alt="Preview" style="display: none; max-width: 100px; max-height: 100px; border-radius: 5px;">
                                        <div class="image-cropper" id="cropperContainer4" style="display:none;">
                                            <img src="" id="croppedImg4" alt="Cropper">
                                            <button type="button" id="saveButton4" class="btn btn-sm btn-primary mt-2"
                                                onclick="saveCroppedImage(4)">
                                                <i class="fas fa-crop me-1"></i>Save Crop
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-4 d-flex gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Update Product
                            </button>
                            <a href="/admin/products" class="btn btn-secondary">
                                <i class="fas fa-times me-2"></i>Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
    const removedImageNames = [];

    // Function to remove an image
    function removeImage(index, imageName) {
        console.log(`Removing image at index ${index}: ${imageName}`);

        // Show confirmation dialog
        if (!confirm('Are you sure you want to remove this image? This action cannot be undone.')) {
            return;
        }

        // Add the image filename to the removed images array
        removedImageNames.push(imageName);

        // Update the hidden input with the filenames of removed images
        document.getElementById('removedImages').value = JSON.stringify(removedImageNames);

        // Completely remove the image container from the DOM
        const container = document.getElementById(`image-container-${index}`);
        if (container) {
            container.style.transition = 'opacity 0.3s ease';
            container.style.opacity = '0';
            setTimeout(() => {
                container.remove();
                checkImageCount();
            }, 300);
        }
    }

    // Function to check image count and show warning if needed
    function checkImageCount() {
        const remainingContainers = document.querySelectorAll('.thumbnails-container .position-relative');
        const warningElement = document.getElementById('image-warning');

        if (remainingContainers.length === 0) {
            // Clear the entire thumbnails container to remove any potential hidden elements
            const thumbnailsContainer = document.querySelector('.thumbnails-container');
            thumbnailsContainer.innerHTML = `
                <div id="no-images-message" class="text-center py-4">
                    <i class="fas fa-image fa-3x text-muted mb-3"></i>
                    <p class="text-muted mb-0">No images available</p>
                    <small class="text-danger">Please add at least one image before saving</small>
                </div>
            `;
            if (warningElement) {
                warningElement.style.display = 'block';
            }
        } else {
            if (warningElement) {
                warningElement.style.display = 'none';
            }
        }
    }

    let croppers = {};

    function viewImage(event, index) {
        const input = event.target;
        const previewImage = document.getElementById(`imgView${index}`);
        const cropperContainer = document.getElementById(`cropperContainer${index}`);
        const cropperImage = document.getElementById(`croppedImg${index}`);
        const saveButton = document.getElementById(`saveButton${index}`);

        if (input.files && input.files[0]) {
            const file = input.files[0];
            const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];

            if (!validTypes.includes(file.type)) {
                alert('Please select a valid image file (JPG, PNG).');
                input.value = '';
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                previewImage.src = e.target.result;
                previewImage.style.display = 'block';
                cropperImage.src = e.target.result;
                cropperContainer.style.display = 'block';

                cropperImage.onload = function() {
                    // Destroy existing cropper for this index if it exists
                    if (croppers[index]) {
                        croppers[index].destroy();
                    }

                    // Initialize new cropper for this specific index
                    croppers[index] = new Cropper(cropperImage, {
                        aspectRatio: 1,
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 0.8,
                        zoomable: true,
                        scalable: true,
                        movable: true
                    });
                };

                cropperImage.onerror = function() {
                    alert('Failed to load the image for cropping.');
                    cropperContainer.style.display = 'none';
                };
            };
            reader.readAsDataURL(file);
        }
    }

    function saveCroppedImage(index) {
        const cropperContainer = document.getElementById(`cropperContainer${index}`);
        const previewImage = document.getElementById(`imgView${index}`);
        const input = document.getElementById(`input${index}`);

        if (!croppers[index]) {
            alert('Cropper is not initialized.');
            return;
        }

        const croppedCanvas = croppers[index].getCroppedCanvas({
            width: 440,
            height: 440
        });

        if (!croppedCanvas) {
            alert('Failed to crop the image.');
            return;
        }

        previewImage.src = croppedCanvas.toDataURL('image/jpeg');
        croppedCanvas.toBlob(function(blob) {
            const fileName = `cropped-img-${Date.now()}-${index}.jpeg`;
            const imgFile = new File([blob], fileName, { type: 'image/jpeg' });

            // Clear the input first to prevent duplicates
            input.value = '';

            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(imgFile);
            input.files = dataTransfer.files;

            console.log(`Cropped image ${index} saved:`, fileName);

            cropperContainer.style.display = 'none';
            croppers[index].destroy();
            delete croppers[index];
        }, 'image/jpeg', 0.9);
    }

    function validateForm() {
        let isValid = true;

        // Clear previous error messages
        document.querySelectorAll('.error-message').forEach(el => el.textContent = '');

        const productName = document.getElementById('product_name').value;
        const description = document.getElementById('descriptionid').value;
        const price = document.querySelector('input[name="price"]').value;
        const quantity = document.querySelector('input[name="quantity"]').value;
        const category = document.querySelector('select[name="category"]').value;

        // Validate product name
        if (!productName.trim()) {
            displayErrorMessage('productName-error', 'Product name is required');
            isValid = false;
        } else if (productName.trim().length < 3) {
            displayErrorMessage('productName-error', 'Product name must be at least 3 characters long');
            isValid = false;
        }

        // Validate description
        if (!description.trim()) {
            displayErrorMessage('description-error', 'Product description is required');
            isValid = false;
        } else if (description.trim().length < 10) {
            displayErrorMessage('description-error', 'Description must be at least 10 characters long');
            isValid = false;
        }

        // Validate price
        if (!price || parseFloat(price) <= 0) {
            displayErrorMessage('price-error', 'Please enter a valid price greater than 0');
            isValid = false;
        } else if (parseFloat(price) > 999999) {
            displayErrorMessage('price-error', 'Price cannot exceed ₹999,999');
            isValid = false;
        }

        // Validate quantity
        if (!quantity || parseInt(quantity) < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid quantity (0 or greater)');
            isValid = false;
        } else if (parseInt(quantity) > 10000) {
            displayErrorMessage('quantity-error', 'Quantity cannot exceed 10,000');
            isValid = false;
        }

        // Validate category
        if (!category) {
            displayErrorMessage('category-error', 'Please select a category');
            isValid = false;
        }

        // Check if at least one image exists
        const remainingImages = document.querySelectorAll('.thumbnails-container .position-relative');
        const newImageInputs = document.querySelectorAll('input[type="file"]');
        let hasNewImages = false;

        newImageInputs.forEach(input => {
            if (input.files && input.files.length > 0) {
                hasNewImages = true;
            }
        });

        if (remainingImages.length === 0 && !hasNewImages) {
            displayErrorMessage('category-error', 'Product must have at least one image');
            document.getElementById('image-warning').style.display = 'block';
            isValid = false;
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) errorElement.textContent = message;
    }
</script>

<%- include("./partials/footer", { activePage: 'products' }) %>