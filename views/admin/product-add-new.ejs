<%- include('./layouts/admin-layout', {
    title: 'Add New Product',
    activePage: 'products',
    headerButtons: `
        <a href="/admin/products" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to Products
        </a>
    `
}) %>

<%- include('./partials/card', {
    title: 'Product Information',
    icon: 'fas fa-box',
    content: `
        <form id="addProductForm" action="/admin/add-products" method="POST" enctype="multipart/form-data" class="needs-validation" novalidate>
            <div class="row">
                <!-- Basic Information -->
                <div class="col-md-8">
                    <h5 class="border-bottom pb-2 mb-3">Basic Information</h5>

                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="productName" name="productName" required
                               minlength="3" maxlength="100">
                        <div class="invalid-feedback">
                            Please enter a valid product name (3-100 characters).
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="category" class="form-label">Category <span class="text-danger">*</span></label>
                            <select class="form-select" id="category" name="category" required>
                                <option value="" selected>Categories</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }); %>
                            </select>
                            <div class="invalid-feedback">
                                Please select a category.
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="brand" class="form-label">Brand</label>
                            <input type="text" class="form-control" id="brand" name="brand" maxlength="50">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">Description <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="description" name="description" rows="4" required minlength="10" maxlength="2000"></textarea>
                        <div class="form-text">
                            <span id="descriptionCharCount">0</span>/2000 characters
                        </div>
                        <div class="invalid-feedback">
                            Please enter a product description (at least 10 characters).
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="price" class="form-label">Price (₹) <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text">₹</span>
                                <input type="number" class="form-control" id="price" name="price" min="0.01" step="0.01" required>
                            </div>
                            <div class="invalid-feedback">
                                Please enter a valid price.
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="stock" class="form-label">Stock <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="stock" name="stock" min="0" required>
                            <div class="invalid-feedback">
                                Please enter a valid stock quantity.
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Images and Additional Info -->
                <div class="col-md-4">
                    <h5 class="border-bottom pb-2 mb-3">Images</h5>

                    <div class="mb-3">
                        <label for="productImages" class="form-label">Product Images <span class="text-danger">*</span></label>
                        <input type="file" class="form-control" id="productImages" name="images" multiple accept="image/jpeg,image/png,image/webp" required>
                        <div class="form-text">
                            You can select multiple images. Max 5 images, 2MB each. Recommended size: 800x800 pixels.
                        </div>
                        <div class="invalid-feedback">
                            Please select at least one product image.
                        </div>
                    </div>

                    <div id="imagePreviewContainer" class="row mt-3 mb-4">
                        <!-- Image previews will be added here -->
                    </div>

                    <h5 class="border-bottom pb-2 mb-3 mt-4">Additional Information</h5>

                    <div class="mb-3">
                        <label for="sku" class="form-label">SKU</label>
                        <input type="text" class="form-control" id="sku" name="sku" maxlength="30">
                    </div>

                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" role="switch" id="isListed" name="isListed" checked>
                        <label class="form-check-label" for="isListed">Active</label>
                    </div>
                </div>

                <div class="col-12 mt-4 text-end">
                    <button type="button" class="btn btn-secondary me-2" onclick="window.location.href='/admin/products'">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i> Save Product
                    </button>
                </div>
            </div>
        </form>
    `
}) %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Form validation
        const form = document.getElementById('addProductForm');

        form.addEventListener('submit', function(event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();

                // Find the first invalid element and focus it
                const invalidElement = form.querySelector(':invalid');
                if (invalidElement) {
                    invalidElement.focus();
                }

                // Show error toast
                Swal.fire({
                    title: 'Validation Error',
                    text: 'Please check the form for errors.',
                    icon: 'error',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }

            form.classList.add('was-validated');
        });

        // Character counter for description
        const description = document.getElementById('description');
        const descriptionCharCount = document.getElementById('descriptionCharCount');

        description.addEventListener('input', function() {
            descriptionCharCount.textContent = this.value.length;
        });

        // Image preview
        const imageInput = document.getElementById('productImages');
        const previewContainer = document.getElementById('imagePreviewContainer');

        imageInput.addEventListener('change', function() {
            // Clear previous previews
            previewContainer.innerHTML = '';

            // Check if files are selected
            if (this.files && this.files.length > 0) {
                // Check if too many files are selected
                if (this.files.length > 5) {
                    Swal.fire({
                        title: 'Too Many Images',
                        text: 'You can upload a maximum of 5 images.',
                        icon: 'error'
                    });
                    this.value = ''; // Clear the input
                    return;
                }

                // Check file sizes and types
                let validFiles = true;
                Array.from(this.files).forEach(file => {
                    if (file.size > 2 * 1024 * 1024) { // 2MB
                        Swal.fire({
                            title: 'File Too Large',
                            text: `The file "${file.name}" exceeds the maximum size of 2MB.`,
                            icon: 'error'
                        });
                        validFiles = false;
                    }

                    if (!['image/jpeg', 'image/png', 'image/webp'].includes(file.type)) {
                        Swal.fire({
                            title: 'Invalid File Type',
                            text: `The file "${file.name}" is not a valid image type. Only JPEG, PNG, and WebP are allowed.`,
                            icon: 'error'
                        });
                        validFiles = false;
                    }
                });

                if (!validFiles) {
                    this.value = ''; // Clear the input
                    return;
                }

                // Create previews for each file
                Array.from(this.files).forEach((file, index) => {
                    const reader = new FileReader();

                    reader.onload = function(e) {
                        const col = document.createElement('div');
                        col.className = 'col-6 mb-2';

                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'img-thumbnail';
                        img.style.height = '150px';
                        img.style.objectFit = 'cover';
                        img.alt = `Preview ${index + 1}`;

                        col.appendChild(img);
                        previewContainer.appendChild(col);
                    };

                    reader.readAsDataURL(file);
                });
            }
        });

        // Generate SKU automatically based on product name and category
        const productName = document.getElementById('productName');
        const category = document.getElementById('category');
        const sku = document.getElementById('sku');

        function generateSKU() {
            if (productName.value && category.value) {
                const categoryText = category.options[category.selectedIndex].text;
                const nameInitials = productName.value
                    .split(' ')
                    .map(word => word.charAt(0))
                    .join('')
                    .toUpperCase();

                const categoryInitial = categoryText.charAt(0).toUpperCase();
                const randomNum = Math.floor(1000 + Math.random() * 9000);

                sku.value = `${categoryInitial}${nameInitials}-${randomNum}`;
            }
        }

        // Generate SKU when product name or category changes
        productName.addEventListener('blur', generateSKU);
        category.addEventListener('change', generateSKU);
    });
</script>
