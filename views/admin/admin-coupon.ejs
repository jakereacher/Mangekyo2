<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Flatpickr CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        .coupon-card {
            transition: all 0.3s ease;
        }
        .coupon-card:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .active-coupon {
            border-left: 5px solid #28a745;
        }
        .inactive-coupon {
            border-left: 5px solid #dc3545;
        }
        .badge-percentage {
            background-color: #17a2b8;
        }
        .badge-fixed {
            background-color: #6c757d;
        }
        .pagination .page-item.active .page-link {
            background-color: #6c757d;
            border-color: #6c757d;
        }
        .pagination-link {
            transition: all 0.3s ease;
        }
        .pagination-link:hover {
            transform: translateY(-1px);
        }
        /* Tailwind-like utility classes */
        .flex { display: flex; }
        .flex-col { flex-direction: column; }
        .flex-row { flex-direction: row; }
        .items-center { align-items: center; }
        .justify-between { justify-content: space-between; }
        .gap-1 { gap: 0.25rem; }
        .gap-2 { gap: 0.5rem; }
        .gap-4 { gap: 1rem; }
        .mt-4 { margin-top: 1rem; }
        .text-sm { font-size: 0.875rem; }
        .text-gray-400 { color: #9ca3af; }
        .text-gray-600 { color: #4b5563; }
        .font-medium { font-weight: 500; }
        .bg-blue-600 { background-color: #2563eb; }
        .text-white { color: white; }
        .rounded { border-radius: 0.25rem; }
        .border { border: 1px solid #e5e7eb; }
        .px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
        .px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
        .py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }
        .hover\:bg-gray-100:hover { background-color: #f3f4f6; }
        .cursor-not-allowed { cursor: not-allowed; }
        .sm\:flex-row { flex-direction: row; }
        @media (min-width: 640px) {
            .sm\:flex-row { flex-direction: row; }
        }
    </style>
</head>
<body>
    <!-- Inline Header -->
    <header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
        <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3" href="#">Admin Panel</a>
        <div class="navbar-nav">
            <div class="nav-item text-nowrap">
                <a class="nav-link px-3" href="/logout">Sign out</a>
            </div>
        </div>
    </header>

    <div class="container-fluid">
        <div class="row">
            <!-- Inline Sidebar -->
            <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
                <div class="position-sticky pt-3">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link active" href="/admin/dashboard">
                                <i class="fas fa-home me-2"></i>Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/coupons">
                                <i class="fas fa-tags me-2"></i>Coupons
                            </a>
                        </li>
                        <!-- Add more sidebar links as needed -->
                    </ul>
                </div>
            </nav>

            <!-- Main Content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">Coupon Management</h1>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                        <i class="fas fa-plus me-2"></i>Add Coupon
                    </button>
                </div>

                <!-- Filters -->
                <div class="card mb-4">
                    <div class="card-body">
                        <form id="filterForm" class="row g-3">
                            <div class="col-md-4">
                                <label for="typeFilter" class="form-label">Discount Type</label>
                                <select class="form-select" id="typeFilter" name="type">
                                    <option value="all" <%= selectedType === 'all' ? 'selected' : '' %>>All Types</option>
                                    <% discountTypes.forEach(type => { %>
                                        <option value="<%= type %>" <%= selectedType === type ? 'selected' : '' %>>
                                            <%= type.charAt(0).toUpperCase() + type.slice(1) %>
                                        </option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="statusFilter" class="form-label">Status</label>
                                <select class="form-select" id="statusFilter" name="isActive">
                                    <option value="all" <%= selectedStatus === 'all' ? 'selected' : '' %>>All Statuses</option>
                                    <option value="true" <%= selectedStatus === 'true' ? 'selected' : '' %>>Active</option>
                                    <option value="false" <%= selectedStatus === 'false' ? 'selected' : '' %>>Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-end">
                                <button type="submit" class="btn btn-outline-secondary w-100">
                                    <i class="fas fa-filter me-2"></i>Filter
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Coupons List -->
                <div class="card">
                    <div class="card-body">
                        <% if (coupons.length === 0) { %>
                            <div class="text-center py-5">
                                <i class="fas fa-tag fa-4x text-muted mb-3"></i>
                                <h5>No coupons found</h5>
                                <p class="text-muted">Add a new coupon to get started</p>
                            </div>
                        <% } else { %>
                            <div class="table-responsive">
                                <table class="table table-hover align-middle">
                                    <thead>
                                        <tr>
                                            <th>Code</th>
                                            <th>Type</th>
                                            <th>Value</th>
                                            <th>Min/Max Price</th>
                                            <th>Total Uses</th>
                                            <th>Usage Limit (Per User)</th>
                                            <th>Validity</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% coupons.forEach(coupon => { %>
                                            <tr class="coupon-card <%= coupon.isActive ? 'active-coupon' : 'inactive-coupon' %>">
                                                <td><strong><%= coupon.code %></strong></td>
                                                <td>
                                                    <span class="badge <%= coupon.type === 'percentage' ? 'badge-percentage' : 'badge-fixed' %> rounded-pill">
                                                        <%= coupon.type.charAt(0).toUpperCase() + coupon.type.slice(1) %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <%= coupon.type === 'percentage' ? coupon.discountValue + '%' : '$' + coupon.discountValue %>
                                                </td>
                                                <td>
                                                    $<%= coupon.minPrice %> / $<%= coupon.maxPrice || '∞' %>
                                                </td>
                                                <td>
                                                    <%= coupon.totalUsedCount || 0 %>
                                                </td>
                                                <td>
                                                    <%= coupon.usageLimit || '∞' %>
                                                </td>
                                                <td>
                                                    <%= coupon.startDate.toLocaleString('en-US', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %> -
                                                    <%= coupon.expiryDate.toLocaleString('en-US', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %>
                                                </td>
                                                <td>
                                                    <% if (coupon.isActive) { %>
                                                        <span class="badge bg-success">Active</span>
                                                    <% } else { %>
                                                        <span class="badge bg-danger">Inactive</span>
                                                    <% } %>
                                                </td>
                                                <td>
                                                    <% if (coupon.isDelete) { %>
                                                        <button class="btn btn-sm btn-outline-success restore-btn" data-id="<%= coupon._id %>">
                                                            <i class="fas fa-undo"></i> Restore
                                                        </button>
                                                    <% } else { %>
                                                        <button class="btn btn-sm btn-outline-warning edit-btn" data-id="<%= coupon._id %>"
                                                                data-code="<%= coupon.code %>" data-type="<%= coupon.type %>"
                                                                data-value="<%= coupon.discountValue %>" data-limit="<%= coupon.usageLimit %>"
                                                                data-minprice="<%= coupon.minPrice %>" data-maxprice="<%= coupon.maxPrice %>"
                                                                data-startdate="<%= coupon.startDate.toISOString().replace('Z', '') %>"
                                                                data-expirydate="<%= coupon.expiryDate.toISOString().replace('Z', '') %>">
                                                            <i class="fas fa-edit"></i> Edit
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="<%= coupon._id %>">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    <% } %>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>

                            <!-- Pagination -->
                            <% if (pagination && pagination.totalPages > 1) { %>
                                <div class="flex flex-col sm:flex-row items-center justify-between gap-4 mt-4">
                                    <div class="text-sm text-gray-600">
                                        Showing <span class="font-medium"><%= (pagination.currentPage - 1) * pagination.limit + 1 %></span> to
                                        <span class="font-medium"><%= Math.min(pagination.currentPage * pagination.limit, pagination.totalItems) %></span> of
                                        <span class="font-medium"><%= pagination.totalItems %></span> items
                                    </div>

                                    <div class="flex items-center gap-1">
                                        <!-- First Page -->
                                        <% if (pagination.currentPage > 1) { %>
                                            <a href="?page=1<%= pagination.searchParams %>&limit=<%= pagination.limit %>"
                                               class="pagination-link px-3 py-1 rounded border hover:bg-gray-100">
                                                <i class="fas fa-angle-double-left"></i>
                                            </a>
                                        <% } else { %>
                                            <span class="px-3 py-1 rounded border text-gray-400 cursor-not-allowed">
                                                <i class="fas fa-angle-double-left"></i>
                                            </span>
                                        <% } %>

                                        <!-- Previous Page -->
                                        <% if (pagination.currentPage > 1) { %>
                                            <a href="?page=<%= pagination.currentPage - 1 %><%= pagination.searchParams %>&limit=<%= pagination.limit %>"
                                               class="pagination-link px-3 py-1 rounded border hover:bg-gray-100">
                                                <i class="fas fa-angle-left"></i>
                                            </a>
                                        <% } else { %>
                                            <span class="px-3 py-1 rounded border text-gray-400 cursor-not-allowed">
                                                <i class="fas fa-angle-left"></i>
                                            </span>
                                        <% } %>

                                        <!-- Page Numbers -->
                                        <% const maxVisiblePages = 5;
                                           let startPage = Math.max(1, pagination.currentPage - Math.floor(maxVisiblePages / 2));
                                           let endPage = Math.min(pagination.totalPages, startPage + maxVisiblePages - 1);

                                           if (endPage - startPage + 1 < maxVisiblePages) {
                                               startPage = Math.max(1, endPage - maxVisiblePages + 1);
                                           }

                                           for (let i = startPage; i <= endPage; i++) { %>
                                            <% if (i === pagination.currentPage) { %>
                                                <span class="px-3 py-1 rounded border bg-blue-600 text-white font-medium">
                                                    <%= i %>
                                                </span>
                                            <% } else { %>
                                                <a href="?page=<%= i %><%= pagination.searchParams %>&limit=<%= pagination.limit %>"
                                                   class="pagination-link px-3 py-1 rounded border hover:bg-gray-100">
                                                    <%= i %>
                                                </a>
                                            <% } %>
                                        <% } %>

                                        <!-- Next Page -->
                                        <% if (pagination.currentPage < pagination.totalPages) { %>
                                            <a href="?page=<%= pagination.currentPage + 1 %><%= pagination.searchParams %>&limit=<%= pagination.limit %>"
                                               class="pagination-link px-3 py-1 rounded border hover:bg-gray-100">
                                                <i class="fas fa-angle-right"></i>
                                            </a>
                                        <% } else { %>
                                            <span class="px-3 py-1 rounded border text-gray-400 cursor-not-allowed">
                                                <i class="fas fa-angle-right"></i>
                                            </span>
                                        <% } %>

                                        <!-- Last Page -->
                                        <% if (pagination.currentPage < pagination.totalPages) { %>
                                            <a href="?page=<%= pagination.totalPages %><%= pagination.searchParams %>&limit=<%= pagination.limit %>"
                                               class="pagination-link px-3 py-1 rounded border hover:bg-gray-100">
                                                <i class="fas fa-angle-double-right"></i>
                                            </a>
                                        <% } else { %>
                                            <span class="px-3 py-1 rounded border text-gray-400 cursor-not-allowed">
                                                <i class="fas fa-angle-double-right"></i>
                                            </span>
                                        <% } %>
                                    </div>

                                    <!-- Items per page selector -->
                                    <div class="flex items-center gap-2">
                                        <span class="text-sm text-gray-600">Items per page:</span>
                                        <select onchange="window.location.href='?page=1&limit=' + this.value + '<%= pagination.searchParamsWithoutLimit %>'"
                                                class="border rounded px-2 py-1 text-sm">
                                            <option value="3" <%= pagination.limit == 3 ? 'selected' : '' %>>3</option>
                                            <option value="10" <%= pagination.limit == 10 ? 'selected' : '' %>>10</option>
                                            <option value="25" <%= pagination.limit == 25 ? 'selected' : '' %>>25</option>
                                            <option value="50" <%= pagination.limit == 50 ? 'selected' : '' %>>50</option>
                                            <option value="100" <%= pagination.limit == 100 ? 'selected' : '' %>>100</option>
                                        </select>
                                    </div>
                                </div>
                            <% } %>
                        <% } %>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Add Coupon Modal -->
    <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="addCouponForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="couponCode" class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" id="couponCode" name="code"
                                   pattern="[a-zA-Z0-9]+" title="Only letters and numbers allowed"
                                   required>
                            <div class="form-text">Only letters and numbers allowed (no spaces or special characters)</div>
                        </div>
                        <div class="mb-3">
                            <label for="discountType" class="form-label">Discount Type</label>
                            <select class="form-select" id="discountType" name="discountType" required>
                                <option value="percentage">Percentage</option>
                                <option value="fixed">Fixed Amount</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="discountValue" class="form-label">Discount Value</label>
                            <input type="number" class="form-control" id="discountValue" name="value"
                                   min="1" max="100" step="0.01" required>
                            <div class="form-text" id="valueHelp">Enter percentage (e.g., 10) or fixed amount (e.g., 5)</div>
                        </div>
                        <div class="mb-3">
                            <label for="minPrice" class="form-label">Minimum Cart Value</label>
                            <input type="number" class="form-control" id="minPrice" name="minPrice"
                                   min="0" step="0.01" required>
                        </div>
                        <div class="mb-3">
                            <label for="maxPrice" class="form-label">Maximum Discount Applicable (for percentage)</label>
                            <input type="number" class="form-control" id="maxPrice" name="maxPrice"
                                   min="0" step="0.01">
                            <div class="form-text">Leave empty for no maximum limit</div>
                        </div>
                        <div class="mb-3">
                            <label for="usageLimit" class="form-label">Usage Limit</label>
                            <input type="number" class="form-control" id="usageLimit" name="limit"
                                   min="1" step="1">
                            <div class="form-text">Leave empty for unlimited usage</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="startDate" class="form-label">Start Date & Time</label>
                                <input type="text" class="form-control" id="startDate" name="startDate" placeholder="Select start date and time" required>
                            </div>
                            <div class="col-md-6">
                                <label for="expiryDate" class="form-label">Expiry Date & Time</label>
                                <input type="text" class="form-control" id="expiryDate" name="expiryDate" placeholder="Select expiry date and time" required>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Coupon</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Coupon Modal -->
    <div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="editCouponForm">
                    <div class="modal-body">
                        <input type="hidden" id="editCouponId" name="id">
                        <div class="mb-3">
                            <label for="editCouponCode" class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" id="editCouponCode" name="code"
                                   pattern="[a-zA-Z0-9]+" title="Only letters and numbers allowed"
                                   required>
                            <div class="form-text">Only letters and numbers allowed (no spaces or special characters)</div>
                        </div>
                        <div class="mb-3">
                            <label for="editDiscountType" class="form-label">Discount Type</label>
                            <select class="form-select" id="editDiscountType" name="discountType" required>
                                <option value="percentage">Percentage</option>
                                <option value="fixed">Fixed Amount</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="editDiscountValue" class="form-label">Discount Value</label>
                            <input type="number" class="form-control" id="editDiscountValue" name="value"
                                   min="1" max="100" step="0.01" required>
                            <div class="form-text" id="editValueHelp">Enter percentage (e.g., 10) or fixed amount (e.g., 5)</div>
                        </div>
                        <div class="mb-3">
                            <label for="editMinPrice" class="form-label">Minimum Cart Value</label>
                            <input type="number" class="form-control" id="editMinPrice" name="minPrice"
                                   min="0" step="0.01" required>
                        </div>
                        <div class="mb-3">
                            <label for="editMaxPrice" class="form-label">Maximum Discount Applicable (for percentage)</label>
                            <input type="number" class="form-control" id="editMaxPrice" name="maxPrice"
                                   min="0" step="0.01">
                            <div class="form-text">Leave empty for no maximum limit</div>
                        </div>
                        <div class="mb-3">
                            <label for="editUsageLimit" class="form-label">Usage Limit</label>
                            <input type="number" class="form-control" id="editUsageLimit" name="limit"
                                   min="1" step="1">
                            <div class="form-text">Leave empty for unlimited usage</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editStartDate" class="form-label">Start Date & Time</label>
                                <input type="text" class="form-control" id="editStartDate" name="startDate" placeholder="Select start date and time" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editExpiryDate" class="form-label">Expiry Date & Time</label>
                                <input type="text" class="form-control" id="editExpiryDate" name="expiryDate" placeholder="Select expiry date and time" required>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Flatpickr JS -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        $(document).ready(function() {
            // Filter form submission
            $('#filterForm').on('submit', function(e) {
                e.preventDefault();
                const type = $('#typeFilter').val();
                const status = $('#statusFilter').val();
                window.location.href = `/admin/coupons?type=${type}&isActive=${status}`;
            });

            // Add coupon form submission
            $('#addCouponForm').on('submit', function(e) {
                e.preventDefault();

                // Get form values
                const code = $('#couponCode').val().trim();
                const discountType = $('#discountType').val();
                const value = parseFloat($('#discountValue').val());
                const minPrice = parseFloat($('#minPrice').val());
                const maxPrice = $('#maxPrice').val() ? parseFloat($('#maxPrice').val()) : null;
                const limit = $('#usageLimit').val() ? parseInt($('#usageLimit').val()) : null;
                const startDate = $('#startDate').val();
                const expiryDate = $('#expiryDate').val();

                // Client-side validation
                let isValid = true;
                let errorMessage = '';

                // Validate coupon code
                if (!code) {
                    isValid = false;
                    errorMessage = 'Coupon code is required';
                } else if (!/^[a-zA-Z0-9]+$/.test(code)) {
                    isValid = false;
                    errorMessage = 'Coupon code must contain only letters and numbers';
                }

                // Validate discount value
                if (isNaN(value) || value <= 0) {
                    isValid = false;
                    errorMessage = 'Discount value must be a positive number';
                } else if (discountType === 'percentage' && value > 100) {
                    isValid = false;
                    errorMessage = 'Percentage discount cannot exceed 100%';
                }

                // Validate minimum price
                if (isNaN(minPrice) || minPrice < 0) {
                    isValid = false;
                    errorMessage = 'Minimum price must be a non-negative number';
                }

                // Validate maximum price (if provided)
                if (maxPrice !== null) {
                    if (isNaN(maxPrice) || maxPrice <= 0) {
                        isValid = false;
                        errorMessage = 'Maximum price must be a positive number';
                    } else if (maxPrice <= minPrice) {
                        isValid = false;
                        errorMessage = 'Maximum price must be greater than minimum price';
                    }
                }

                // Validate usage limit (if provided)
                if (limit !== null && (isNaN(limit) || limit <= 0)) {
                    isValid = false;
                    errorMessage = 'Usage limit must be a positive integer';
                }

                // Validate dates
                if (!startDate || !expiryDate) {
                    isValid = false;
                    errorMessage = 'Start date and expiry date are required';
                } else {
                    const parsedStartDate = new Date(startDate);
                    const parsedExpiryDate = new Date(expiryDate);

                    if (isNaN(parsedStartDate.getTime()) || isNaN(parsedExpiryDate.getTime())) {
                        isValid = false;
                        errorMessage = 'Invalid date format';
                    } else if (parsedStartDate >= parsedExpiryDate) {
                        isValid = false;
                        errorMessage = 'Expiry date must be after start date';
                    }
                }

                if (!isValid) {
                    alert(errorMessage);
                    return;
                }

                // Submit form if validation passes
                $.ajax({
                    url: '/admin/add-coupon',
                    method: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        if (response.success) {
                            alert('Coupon added successfully!');
                            $('#addCouponModal').modal('hide');
                            location.reload();
                        }
                    },
                    error: function(xhr) {
                        alert('Error adding coupon: ' + (xhr.responseJSON?.message || 'Please try again'));
                    }
                });
            });

            // Delete coupon button
            $('.delete-btn').on('click', function() {
                const couponId = $(this).data('id');
                if (confirm('Are you sure you want to delete this coupon?')) {
                    $.ajax({
                        url: '/admin/remove-coupon',
                        method: 'POST',
                        data: { id: couponId },
                        success: function(response) {
                            if (response.success) {
                                alert('Coupon deleted successfully!');
                                location.reload();
                            }
                        },
                        error: function() {
                            alert('Error deleting coupon');
                        }
                    });
                }
            });

            // Restore coupon button
            $('.restore-btn').on('click', function() {
                const couponId = $(this).data('id');
                if (confirm('Are you sure you want to restore this coupon?')) {
                    $.ajax({
                        url: '/admin/restore-coupon',
                        method: 'POST',
                        data: { id: couponId },
                        success: function(response) {
                            if (response.success) {
                                alert('Coupon restored successfully!');
                                location.reload();
                            }
                        },
                        error: function() {
                            alert('Error restoring coupon');
                        }
                    });
                }
            });

            // Update help text and validation based on discount type
            $('#discountType').on('change', function() {
                const type = $(this).val();
                if (type === 'percentage') {
                    $('#valueHelp').text('Enter percentage (e.g., 10 for 10%)');
                    $('#discountValue').attr('max', '100');
                    $('#maxPrice').closest('.mb-3').show();
                } else {
                    $('#valueHelp').text('Enter fixed amount (e.g., 5 for $5)');
                    $('#discountValue').removeAttr('max');
                    $('#maxPrice').closest('.mb-3').hide();
                }
            }).trigger('change');

            // Update help text and validation based on discount type for edit form
            $('#editDiscountType').on('change', function() {
                const type = $(this).val();
                if (type === 'percentage') {
                    $('#editValueHelp').text('Enter percentage (e.g., 10 for 10%)');
                    $('#editDiscountValue').attr('max', '100');
                    $('#editMaxPrice').closest('.mb-3').show();
                } else {
                    $('#editValueHelp').text('Enter fixed amount (e.g., 5 for $5)');
                    $('#editDiscountValue').removeAttr('max');
                    $('#editMaxPrice').closest('.mb-3').hide();
                }
            });

            // Initialize Flatpickr
            const startDatePicker = flatpickr("#startDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
                minDate: "today",
                onChange: function (selectedDates, dateStr) {
                    expiryDatePicker.set("minDate", dateStr);
                }
            });

            const expiryDatePicker = flatpickr("#expiryDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
                minDate: "today"
            });

            // Initialize Flatpickr for edit modal
            const editStartDatePicker = flatpickr("#editStartDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
                minDate: "today",
                onChange: function (selectedDates, dateStr) {
                    editExpiryDatePicker.set("minDate", dateStr);
                }
            });

            const editExpiryDatePicker = flatpickr("#editExpiryDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
                minDate: "today"
            });

            // Open edit modal and populate fields
            $('.edit-btn').on('click', function () {
                const button = $(this);
                $('#editCouponId').val(button.data('id'));
                $('#editCouponCode').val(button.data('code'));
                $('#editDiscountType').val(button.data('type'));
                $('#editDiscountValue').val(button.data('value'));
                $('#editMinPrice').val(button.data('minprice'));
                $('#editMaxPrice').val(button.data('maxprice'));
                $('#editUsageLimit').val(button.data('limit'));

                // Format the dates for Flatpickr
                const startDate = button.data('startdate');
                const expiryDate = button.data('expirydate');

                console.log('Start Date from data attribute:', startDate);
                console.log('Expiry Date from data attribute:', expiryDate);

                // Set the dates in the Flatpickr instances
                editStartDatePicker.setDate(startDate);
                editExpiryDatePicker.setDate(expiryDate);

                // Trigger the discount type change to update UI
                $('#editDiscountType').trigger('change');

                $('#editCouponModal').modal('show');
            });

            // Submit edit coupon form
            $('#editCouponForm').on('submit', function (e) {
                e.preventDefault();

                // Get form values
                const code = $('#editCouponCode').val().trim();
                const discountType = $('#editDiscountType').val();
                const value = parseFloat($('#editDiscountValue').val());
                const minPrice = parseFloat($('#editMinPrice').val());
                const maxPrice = $('#editMaxPrice').val() ? parseFloat($('#editMaxPrice').val()) : null;
                const limit = $('#editUsageLimit').val() ? parseInt($('#editUsageLimit').val()) : null;
                const startDate = $('#editStartDate').val();
                const expiryDate = $('#editExpiryDate').val();

                // Client-side validation
                let isValid = true;
                let errorMessage = '';

                // Validate coupon code
                if (!code) {
                    isValid = false;
                    errorMessage = 'Coupon code is required';
                } else if (!/^[a-zA-Z0-9]+$/.test(code)) {
                    isValid = false;
                    errorMessage = 'Coupon code must contain only letters and numbers';
                }

                // Validate discount value
                if (isNaN(value) || value <= 0) {
                    isValid = false;
                    errorMessage = 'Discount value must be a positive number';
                } else if (discountType === 'percentage' && value > 100) {
                    isValid = false;
                    errorMessage = 'Percentage discount cannot exceed 100%';
                }

                // Validate minimum price
                if (isNaN(minPrice) || minPrice < 0) {
                    isValid = false;
                    errorMessage = 'Minimum price must be a non-negative number';
                }

                // Validate maximum price (if provided)
                if (maxPrice !== null) {
                    if (isNaN(maxPrice) || maxPrice <= 0) {
                        isValid = false;
                        errorMessage = 'Maximum price must be a positive number';
                    } else if (maxPrice <= minPrice) {
                        isValid = false;
                        errorMessage = 'Maximum price must be greater than minimum price';
                    }
                }

                // Validate usage limit (if provided)
                if (limit !== null && (isNaN(limit) || limit <= 0)) {
                    isValid = false;
                    errorMessage = 'Usage limit must be a positive integer';
                }

                // Validate dates
                if (!startDate || !expiryDate) {
                    isValid = false;
                    errorMessage = 'Start date and expiry date are required';
                } else {
                    const parsedStartDate = new Date(startDate);
                    const parsedExpiryDate = new Date(expiryDate);

                    if (isNaN(parsedStartDate.getTime()) || isNaN(parsedExpiryDate.getTime())) {
                        isValid = false;
                        errorMessage = 'Invalid date format';
                    } else if (parsedStartDate >= parsedExpiryDate) {
                        isValid = false;
                        errorMessage = 'Expiry date must be after start date';
                    }
                }

                if (!isValid) {
                    alert(errorMessage);
                    return;
                }

                const now = new Date();
                const parsedStartDate = new Date(startDate);

                // Add isActive reset logic
                const data = $(this).serializeArray();
                if (parsedStartDate > now) {
                    data.push({ name: 'isActive', value: false });
                }

                $.ajax({
                    url: '/admin/edit-coupon',
                    method: 'PUT',
                    data: $.param(data),
                    success: function (response) {
                        if (response.success) {
                            alert('Coupon updated successfully!');
                            $('#editCouponModal').modal('hide');
                            location.reload();
                        }
                    },
                    error: function (xhr) {
                        alert('Error updating coupon: ' + (xhr.responseJSON?.message || 'Please try again'));
                    }
                });
            });
        });
    </script>
</body>
</html>