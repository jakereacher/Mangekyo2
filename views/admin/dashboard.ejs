<%- include("partials/header", { activePage: 'dashboard' }) %>

<!-- Dashboard Content -->
<div class="content-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1><i class="fas fa-tachometer-alt me-2"></i>Dashboard</h1>
            <p class="text-muted mb-0">Welcome to your admin dashboard</p>
        </div>
        <div class="d-flex gap-2">
            <a href="/admin/sales-report" class="btn btn-outline-primary btn-sm">
                <i class="fas fa-chart-bar me-1"></i>View Reports
            </a>
            <div class="dropdown">
                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="periodDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-calendar-alt me-1"></i>
                    <%
                    let periodText = 'This Month';
                    if (currentPeriod === 'today') periodText = 'Today';
                    else if (currentPeriod === 'week') periodText = 'This Week';
                    else if (currentPeriod === 'year') periodText = 'This Year';
                    %>
                    <%= periodText %>
                </button>
                <ul class="dropdown-menu" aria-labelledby="periodDropdown">
                    <li><a class="dropdown-item <%= currentPeriod === 'today' ? 'active' : '' %>" href="?period=today">
                        <i class="fas fa-clock me-2"></i>Today
                    </a></li>
                    <li><a class="dropdown-item <%= currentPeriod === 'week' ? 'active' : '' %>" href="?period=week">
                        <i class="fas fa-calendar-week me-2"></i>This Week
                    </a></li>
                    <li><a class="dropdown-item <%= currentPeriod === 'month' ? 'active' : '' %>" href="?period=month">
                        <i class="fas fa-calendar-alt me-2"></i>This Month
                    </a></li>
                    <li><a class="dropdown-item <%= currentPeriod === 'year' ? 'active' : '' %>" href="?period=year">
                        <i class="fas fa-calendar me-2"></i>This Year
                    </a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<%
function formatCurrency(amount) {
    // Handle undefined, null, or non-numeric values
    if (amount === undefined || amount === null || isNaN(amount)) {
        amount = 0;
    }

    // Convert to number and format
    return 'â‚¹' + Number(amount).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
}
%>

<!-- Error Alert -->
<% if (typeof error !== 'undefined' && error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error!</strong> <%= error %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
<% } %>

                    <!-- Dashboard Summary -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <h4 class="mb-3">Store Performance Summary</h4>
                                    <p class="text-muted">
                                        Welcome to your dashboard! Here's a quick overview of your store's performance.
                                    </p>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <ul class="list-unstyled">
                                                <li class="mb-2"><i class="fas fa-check-circle text-success me-2"></i> <strong><%= stats.orderCount %></strong> total orders processed</li>
                                                <li class="mb-2"><i class="fas fa-users text-primary me-2"></i> <strong><%= stats.userCount %></strong> registered customers</li>
                                                <li class="mb-2"><i class="fas fa-box text-warning me-2"></i> <strong><%= stats.productCount %></strong> products in inventory</li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <ul class="list-unstyled">
                                                <li class="mb-2"><i class="fas fa-rupee-sign text-danger me-2"></i> <strong><%= formatCurrency(stats.totalSales) %></strong> total revenue</li>
                                                <li class="mb-2"><i class="fas fa-shopping-cart text-info me-2"></i> <strong><%= formatCurrency(stats.orderCount > 0 ? (stats.totalSales / stats.orderCount) : 0) %></strong> average order value</li>
                                                <li class="mb-2"><i class="fas fa-th-large text-secondary me-2"></i> <strong><%= stats.categoryCount %></strong> product categories</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 d-flex align-items-center justify-content-center">
                                    <div class="text-center">
                                        <div class="display-4 text-primary mb-2">
                                            <i class="fas fa-chart-line"></i>
                                        </div>
                                        <h5><%= periodText %> Revenue</h5>
                                        <h3 class="text-success"><%= formatCurrency(stats.periodSales) %></h3>
                                        <p class="text-muted small">
                                            <% if (currentPeriod === 'today') { %>
                                                Today's sales
                                            <% } else if (currentPeriod === 'week') { %>
                                                Last 7 days
                                            <% } else if (currentPeriod === 'year') { %>
                                                This year
                                            <% } else { %>
                                                This month
                                            <% } %>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Stats Cards -->
                    <div class="row">
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-primary text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Customers</div>
                                            <div class="h5 mb-0 fw-bold"><%= stats.userCount %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-users"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-success text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Products</div>
                                            <div class="h5 mb-0 fw-bold"><%= stats.productCount %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-box"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-info text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Orders</div>
                                            <div class="h5 mb-0 fw-bold"><%= stats.orderCount %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-shopping-cart"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-warning text-white">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Categories</div>
                                            <div class="h5 mb-0 fw-bold"><%= stats.categoryCount %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-th-large"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Revenue Cards -->
                    <div class="row mb-4">
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-danger text-white h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Total Revenue</div>
                                            <div class="h5 mb-0 fw-bold"><%= formatCurrency(stats.totalSales) %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-rupee-sign"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-secondary text-white h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">
                                                <% if (currentPeriod === 'today') { %>
                                                    Today's Revenue
                                                <% } else if (currentPeriod === 'week') { %>
                                                    Weekly Revenue
                                                <% } else if (currentPeriod === 'year') { %>
                                                    Yearly Revenue
                                                <% } else { %>
                                                    Monthly Revenue
                                                <% } %>
                                            </div>
                                            <div class="h5 mb-0 fw-bold"><%= formatCurrency(stats.periodSales) %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-chart-line"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-info text-white h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Average Order Value</div>
                                            <div class="h5 mb-0 fw-bold"><%= formatCurrency(stats.orderCount > 0 ? (stats.totalSales / stats.orderCount) : 0) %></div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-shopping-basket"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card bg-dark text-white h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="text-xs fw-bold text-uppercase mb-1">Conversion Rate</div>
                                            <div class="h5 mb-0 fw-bold"><%= stats.userCount > 0 ? ((stats.orderCount / stats.userCount) * 100).toFixed(1) : '0.0' %>%</div>
                                        </div>
                                        <div class="card-icon">
                                            <i class="fas fa-percentage"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Charts Section -->
                    <div class="row mb-4">
                        <!-- Revenue Trend Chart -->
                        <div class="col-xl-8 col-lg-7">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">
                                        Revenue Trend -
                                        <% if (currentPeriod === 'today') { %>
                                            Today (Hourly)
                                        <% } else if (currentPeriod === 'week') { %>
                                            Last 7 Days
                                        <% } else if (currentPeriod === 'year') { %>
                                            This Year (Monthly)
                                        <% } else { %>
                                            This Month (Daily)
                                        <% } %>
                                    </h6>
                                    <div class="dropdown no-arrow">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
                                            <li><a class="dropdown-item" href="#" onclick="downloadChart('revenueTrendChart', 'Revenue-Trend.png')">Download PNG</a></li>
                                            <li><a class="dropdown-item" href="#" onclick="printChart('revenueTrendChart')">Print Chart</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart-area">
                                        <canvas id="revenueTrendChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Payment Methods Chart -->
                        <div class="col-xl-4 col-lg-5">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Payment Methods</h6>
                                    <div class="dropdown no-arrow">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton2" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton2">
                                            <li><a class="dropdown-item" href="#" onclick="downloadChart('paymentMethodsChart', 'Payment-Methods.png')">Download PNG</a></li>
                                            <li><a class="dropdown-item" href="#" onclick="printChart('paymentMethodsChart')">Print Chart</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart-pie">
                                        <canvas id="paymentMethodsChart"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <!-- Top Products Chart -->
                        <div class="col-xl-6 col-lg-6">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Top Products by Revenue</h6>
                                    <div class="d-flex align-items-center">
                                        <!-- Chart Type Selector for Products -->
                                        <div class="btn-group me-2" role="group" aria-label="Product Chart Type">
                                            <input type="radio" class="btn-check" name="productChartType" id="productBar" value="bar" checked>
                                            <label class="btn btn-outline-primary btn-sm" for="productBar" title="Bar Chart">
                                                <i class="fas fa-chart-bar"></i>
                                            </label>

                                            <input type="radio" class="btn-check" name="productChartType" id="productLine" value="line">
                                            <label class="btn btn-outline-primary btn-sm" for="productLine" title="Line Chart">
                                                <i class="fas fa-chart-line"></i>
                                            </label>

                                            <input type="radio" class="btn-check" name="productChartType" id="productPie" value="pie">
                                            <label class="btn btn-outline-primary btn-sm" for="productPie" title="Pie Chart">
                                                <i class="fas fa-chart-pie"></i>
                                            </label>

                                            <input type="radio" class="btn-check" name="productChartType" id="productDoughnut" value="doughnut">
                                            <label class="btn btn-outline-primary btn-sm" for="productDoughnut" title="Doughnut Chart">
                                                <i class="fas fa-circle-notch"></i>
                                            </label>
                                        </div>

                                        <div class="dropdown no-arrow">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton3" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton3">
                                                <li><a class="dropdown-item" href="#" onclick="downloadChart('topProductsChart', 'Top-Products.png')">Download PNG</a></li>
                                                <li><a class="dropdown-item" href="#" onclick="printChart('topProductsChart')">Print Chart</a></li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item" href="#" onclick="showProductDetails()">View Details</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart-container">
                                        <canvas id="topProductsChart"></canvas>
                                    </div>
                                    <!-- Product Details Table (Initially Hidden) -->
                                    <div id="productDetailsTable" class="mt-3" style="display: none;">
                                        <div class="table-responsive">
                                            <table class="table table-sm table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>Product Name</th>
                                                        <th>Revenue</th>
                                                        <th>Units Sold</th>
                                                        <th>Orders</th>
                                                        <th>Avg. Price</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="productDetailsBody">
                                                    <!-- Will be populated by JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Sales by Category Chart -->
                        <div class="col-xl-6 col-lg-6">
                            <div class="card shadow mb-4">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Sales by Category</h6>
                                    <div class="d-flex align-items-center">
                                        <!-- Chart Type Selector for Categories -->
                                        <div class="btn-group me-2" role="group" aria-label="Category Chart Type">
                                            <input type="radio" class="btn-check" name="categoryChartType" id="categoryPie" value="pie" checked>
                                            <label class="btn btn-outline-success btn-sm" for="categoryPie" title="Pie Chart">
                                                <i class="fas fa-chart-pie"></i>
                                            </label>

                                            <input type="radio" class="btn-check" name="categoryChartType" id="categoryDoughnut" value="doughnut">
                                            <label class="btn btn-outline-success btn-sm" for="categoryDoughnut" title="Doughnut Chart">
                                                <i class="fas fa-circle-notch"></i>
                                            </label>

                                            <input type="radio" class="btn-check" name="categoryChartType" id="categoryBar" value="bar">
                                            <label class="btn btn-outline-success btn-sm" for="categoryBar" title="Bar Chart">
                                                <i class="fas fa-chart-bar"></i>
                                            </label>

                                            <input type="radio" class="btn-check" name="categoryChartType" id="categoryPolar" value="polarArea">
                                            <label class="btn btn-outline-success btn-sm" for="categoryPolar" title="Polar Area Chart">
                                                <i class="fas fa-circle"></i>
                                            </label>
                                        </div>

                                        <div class="dropdown no-arrow">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton4" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton4">
                                                <li><a class="dropdown-item" href="#" onclick="downloadChart('categoryChart', 'Category-Sales.png')">Download PNG</a></li>
                                                <li><a class="dropdown-item" href="#" onclick="printChart('categoryChart')">Print Chart</a></li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item" href="#" onclick="showCategoryDetails()">View Details</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="chart-container">
                                        <canvas id="categoryChart"></canvas>
                                    </div>
                                    <!-- Category Details Table (Initially Hidden) -->
                                    <div id="categoryDetailsTable" class="mt-3" style="display: none;">
                                        <div class="table-responsive">
                                            <table class="table table-sm table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>Category Name</th>
                                                        <th>Revenue</th>
                                                        <th>Items Sold</th>
                                                        <th>Products</th>
                                                        <th>Orders</th>
                                                        <th>Share %</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="categoryDetailsBody">
                                                    <!-- Will be populated by JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Recent Orders Table -->
                    <div class="card mb-4">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">Recent Orders</h5>
                            <a href="/admin/orders" class="btn btn-sm btn-outline-primary">View All Orders</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped table-hover" id="recentOrdersTable">
                                    <thead>
                                        <tr>
                                            <th>Order ID</th>
                                            <th>Customer</th>
                                            <th>Date</th>
                                            <th>Amount</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (recentOrders && recentOrders.length > 0) { %>
                                            <% recentOrders.forEach(order => { %>
                                                <tr>
                                                    <td>#<%= order.orderId %></td>
                                                    <td><%= order.customer %></td>
                                                    <td><%= order.date %></td>
                                                    <td><%= order.amount %></td>
                                                    <td>
                                                        <%
                                                        let badgeClass = 'bg-warning';
                                                        if (order.status === 'Delivered') {
                                                            badgeClass = 'bg-success';
                                                        } else if (order.status === 'Shipped') {
                                                            badgeClass = 'bg-primary';
                                                        } else if (order.status === 'Cancelled') {
                                                            badgeClass = 'bg-danger';
                                                        }
                                                        %>
                                                        <span class="badge <%= badgeClass %>"><%= order.status %></span>
                                                    </td>
                                                    <td>
                                                        <a href="/admin/orders/<%= order._id %>" class="btn btn-sm btn-info">
                                                            <i class="fas fa-eye"></i>
                                                        </a>
                                                        <a href="/admin/orders/edit/<%= order._id %>" class="btn btn-sm btn-warning">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="6" class="text-center">No recent orders found</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>

                            <!-- Pagination for Orders -->
                            <% if (pagination && pagination.orders && pagination.orders.totalPages > 1) { %>
                                <div class="d-flex justify-content-between align-items-center mt-3" id="ordersPaginationContainer">
                                    <div class="text-muted" id="ordersInfo">
                                        Showing <%= ((pagination.orders.currentPage - 1) * pagination.orders.limit) + 1 %> to
                                        <%= Math.min(pagination.orders.currentPage * pagination.orders.limit, pagination.orders.totalItems) %>
                                        of <%= pagination.orders.totalItems %> orders
                                    </div>
                                    <nav aria-label="Orders pagination">
                                        <ul class="pagination pagination-sm mb-0" id="ordersPagination">
                                            <!-- Previous Button -->
                                            <li class="page-item <%= pagination.orders.currentPage === 1 ? 'disabled' : '' %>">
                                                <a class="page-link" href="#" onclick="loadOrdersPage(<%= pagination.orders.currentPage - 1 %>); return false;" aria-label="Previous">
                                                    <span aria-hidden="true">&laquo;</span>
                                                </a>
                                            </li>

                                            <!-- Page Numbers -->
                                            <%
                                            let startPage = Math.max(1, pagination.orders.currentPage - 2);
                                            let endPage = Math.min(pagination.orders.totalPages, startPage + 4);

                                            if (endPage - startPage < 4) {
                                                startPage = Math.max(1, endPage - 4);
                                            }

                                            for (let i = startPage; i <= endPage; i++) {
                                            %>
                                                <li class="page-item <%= pagination.orders.currentPage === i ? 'active' : '' %>">
                                                    <a class="page-link" href="#" onclick="loadOrdersPage(<%= i %>); return false;"><%= i %></a>
                                                </li>
                                            <% } %>

                                            <!-- Next Button -->
                                            <li class="page-item <%= pagination.orders.currentPage === pagination.orders.totalPages ? 'disabled' : '' %>">
                                                <a class="page-link" href="#" onclick="loadOrdersPage(<%= pagination.orders.currentPage + 1 %>); return false;" aria-label="Next">
                                                    <span aria-hidden="true">&raquo;</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Latest Products -->
                    <div class="card mb-4">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">Latest Products</h5>
                            <a href="/admin/products" class="btn btn-sm btn-outline-success">View All Products</a>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped table-hover" id="latestProductsTable">
                                    <thead>
                                        <tr>
                                            <th>Product ID</th>
                                            <th>Name</th>
                                            <th>Category</th>
                                            <th>Price</th>
                                            <th>Stock</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (latestProducts && latestProducts.length > 0) { %>
                                            <% latestProducts.forEach(product => { %>
                                                <tr>
                                                    <td>#<%= product.productId %></td>
                                                    <td><%= product.name %></td>
                                                    <td><%= product.category %></td>
                                                    <td><%= product.price %></td>
                                                    <td>
                                                        <% if (product.stock > 0) { %>
                                                            <span class="<%= product.stock < 10 ? 'text-danger' : 'text-success' %>">
                                                                <%= product.stock %>
                                                            </span>
                                                        <% } else { %>
                                                            <span class="text-danger">Out of Stock</span>
                                                        <% } %>
                                                    </td>
                                                    <td>
                                                        <a href="/admin/products/<%= product._id %>" class="btn btn-sm btn-info">
                                                            <i class="fas fa-eye"></i>
                                                        </a>
                                                        <a href="/admin/products/edit/<%= product._id %>" class="btn btn-sm btn-warning">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="6" class="text-center">No products found</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>

                            <!-- Pagination for Products -->
                            <% if (pagination && pagination.products && pagination.products.totalPages > 1) { %>
                                <div class="d-flex justify-content-between align-items-center mt-3" id="productsPaginationContainer">
                                    <div class="text-muted" id="productsInfo">
                                        Showing <%= ((pagination.products.currentPage - 1) * pagination.products.limit) + 1 %> to
                                        <%= Math.min(pagination.products.currentPage * pagination.products.limit, pagination.products.totalItems) %>
                                        of <%= pagination.products.totalItems %> products
                                    </div>
                                    <nav aria-label="Products pagination">
                                        <ul class="pagination pagination-sm mb-0" id="productsPagination">
                                            <!-- Previous Button -->
                                            <li class="page-item <%= pagination.products.currentPage === 1 ? 'disabled' : '' %>">
                                                <a class="page-link" href="#" onclick="loadProductsPage(<%= pagination.products.currentPage - 1 %>); return false;" aria-label="Previous">
                                                    <span aria-hidden="true">&laquo;</span>
                                                </a>
                                            </li>

                                            <!-- Page Numbers -->
                                            <%
                                            let pStartPage = Math.max(1, pagination.products.currentPage - 2);
                                            let pEndPage = Math.min(pagination.products.totalPages, pStartPage + 4);

                                            if (pEndPage - pStartPage < 4) {
                                                pStartPage = Math.max(1, pEndPage - 4);
                                            }

                                            for (let i = pStartPage; i <= pEndPage; i++) {
                                            %>
                                                <li class="page-item <%= pagination.products.currentPage === i ? 'active' : '' %>">
                                                    <a class="page-link" href="#" onclick="loadProductsPage(<%= i %>); return false;"><%= i %></a>
                                                </li>
                                            <% } %>

                                            <!-- Next Button -->
                                            <li class="page-item <%= pagination.products.currentPage === pagination.products.totalPages ? 'disabled' : '' %>">
                                                <a class="page-link" href="#" onclick="loadProductsPage(<%= pagination.products.currentPage + 1 %>); return false;" aria-label="Next">
                                                    <span aria-hidden="true">&raquo;</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>

    <!-- Initialize Charts -->
    <script src="/admin/js/charts.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        try {
            const currentPeriod = '<%= currentPeriod %>';

            // Global chart instances
            let revenueChart, paymentChart, productChart, categoryChart;

            // Chart data
            const chartData = {
                revenue: {
                    labels: <%- JSON.stringify(revenueData ? revenueData.labels : []) %>,
                    values: <%- JSON.stringify(revenueData ? revenueData.values : []) %>,
                    period: currentPeriod
                },
                payment: {
                    labels: <%- JSON.stringify(paymentMethodsData ? paymentMethodsData.labels : []) %>,
                    values: <%- JSON.stringify(paymentMethodsData ? paymentMethodsData.values : []) %>,
                    counts: <%- JSON.stringify(paymentMethodsData ? paymentMethodsData.counts : []) %>
                },
                products: {
                    labels: <%- JSON.stringify(topProductsData ? topProductsData.labels : []) %>,
                    fullNames: <%- JSON.stringify(topProductsData ? topProductsData.fullNames : []) %>,
                    values: <%- JSON.stringify(topProductsData ? topProductsData.values : []) %>,
                    quantities: <%- JSON.stringify(topProductsData ? topProductsData.quantities : []) %>,
                    averagePrices: <%- JSON.stringify(topProductsData ? topProductsData.averagePrices : []) %>,
                    orderCounts: <%- JSON.stringify(topProductsData ? topProductsData.orderCounts : []) %>
                },
                categories: {
                    labels: <%- JSON.stringify(categoryData ? categoryData.labels : []) %>,
                    values: <%- JSON.stringify(categoryData ? categoryData.values : []) %>,
                    quantities: <%- JSON.stringify(categoryData ? categoryData.quantities : []) %>,
                    productCounts: <%- JSON.stringify(categoryData ? categoryData.productCounts : []) %>,
                    orderCounts: <%- JSON.stringify(categoryData ? categoryData.orderCounts : []) %>
                }
            };

            // Color schemes
            const colors = {
                primary: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b', '#858796', '#5a5c69', '#fd7e14', '#6f42c1', '#e83e8c'],
                gradient: ['#667eea', '#764ba2', '#f093fb', '#f5576c', '#4facfe', '#00f2fe', '#43e97b', '#38f9d7', '#ffecd2', '#fcb69f']
            };

            // Initialize Revenue Trend Chart
            function initRevenueChart() {
                if (document.getElementById('revenueTrendChart')) {
                    const ctx = document.getElementById('revenueTrendChart').getContext('2d');
                    revenueChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: chartData.revenue.labels,
                            datasets: [{
                                label: 'Revenue (â‚¹)',
                                data: chartData.revenue.values,
                                borderColor: '#4e73df',
                                backgroundColor: 'rgba(78, 115, 223, 0.1)',
                                borderWidth: 3,
                                fill: true,
                                tension: 0.4,
                                pointBackgroundColor: '#4e73df',
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 5,
                                pointHoverRadius: 8
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                },
                                tooltip: {
                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                    titleColor: '#ffffff',
                                    bodyColor: '#ffffff',
                                    borderColor: '#4e73df',
                                    borderWidth: 1,
                                    callbacks: {
                                        label: function(context) {
                                            return 'Revenue: â‚¹' + context.parsed.y.toLocaleString('en-IN', {
                                                minimumFractionDigits: 2,
                                                maximumFractionDigits: 2
                                            });
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return 'â‚¹' + value.toLocaleString('en-IN');
                                        }
                                    },
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    }
                                },
                                x: {
                                    grid: {
                                        display: false
                                    }
                                }
                            }
                        }
                    });
                }
            }

            // Initialize Payment Methods Chart
            function initPaymentChart() {
                if (document.getElementById('paymentMethodsChart')) {
                    const ctx = document.getElementById('paymentMethodsChart').getContext('2d');
                    paymentChart = new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: chartData.payment.labels,
                            datasets: [{
                                data: chartData.payment.values,
                                backgroundColor: colors.primary.slice(0, chartData.payment.labels.length),
                                borderWidth: 2,
                                borderColor: '#ffffff'
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        padding: 20,
                                        usePointStyle: true
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                            const percentage = ((context.parsed / total) * 100).toFixed(1);
                                            const count = chartData.payment.counts[context.dataIndex];
                                            return [
                                                context.label + ': â‚¹' + context.parsed.toLocaleString('en-IN'),
                                                'Orders: ' + count,
                                                'Percentage: ' + percentage + '%'
                                            ];
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
            }

            // Initialize Product Chart with dynamic type
            function initProductChart(type = 'bar') {
                if (productChart) {
                    productChart.destroy();
                }

                if (document.getElementById('topProductsChart')) {
                    const ctx = document.getElementById('topProductsChart').getContext('2d');

                    const config = {
                        type: type,
                        data: {
                            labels: chartData.products.labels,
                            datasets: [{
                                label: 'Revenue (â‚¹)',
                                data: chartData.products.values,
                                backgroundColor: type === 'bar' || type === 'line' ?
                                    'rgba(28, 200, 138, 0.8)' :
                                    colors.primary.slice(0, chartData.products.labels.length),
                                borderColor: type === 'line' ? '#1cc88a' : '#ffffff',
                                borderWidth: type === 'line' ? 3 : 2
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: type === 'pie' || type === 'doughnut' ? 'bottom' : 'top'
                                },
                                tooltip: {
                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                    titleColor: '#ffffff',
                                    bodyColor: '#ffffff',
                                    borderColor: '#1cc88a',
                                    borderWidth: 1,
                                    callbacks: {
                                        title: function(context) {
                                            const fullName = chartData.products.fullNames[context[0].dataIndex];
                                            return fullName || 'Product Details';
                                        },
                                        label: function(context) {
                                            const quantity = chartData.products.quantities[context.dataIndex];
                                            const avgPrice = chartData.products.averagePrices[context.dataIndex];
                                            const orderCount = chartData.products.orderCounts[context.dataIndex];

                                            if (type === 'pie' || type === 'doughnut') {
                                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                                return [
                                                    'Revenue: â‚¹' + context.parsed.toLocaleString('en-IN'),
                                                    'Units Sold: ' + quantity,
                                                    'Orders: ' + orderCount,
                                                    'Avg Price: â‚¹' + avgPrice.toFixed(2),
                                                    'Market Share: ' + percentage + '%'
                                                ];
                                            } else {
                                                const revenue = context.parsed.y;
                                                return [
                                                    'Revenue: â‚¹' + revenue.toLocaleString('en-IN'),
                                                    'Units Sold: ' + quantity,
                                                    'Orders: ' + orderCount,
                                                    'Avg Price: â‚¹' + avgPrice.toFixed(2)
                                                ];
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    };

                    // Add specific options for different chart types
                    if (type === 'bar') {
                        config.options.scales = {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return 'â‚¹' + value.toLocaleString('en-IN');
                                    }
                                }
                            },
                            x: {
                                ticks: {
                                    maxRotation: 45,
                                    minRotation: 0
                                }
                            }
                        };
                    } else if (type === 'line') {
                        config.data.datasets[0].fill = true;
                        config.data.datasets[0].tension = 0.4;
                        config.options.scales = {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return 'â‚¹' + value.toLocaleString('en-IN');
                                    }
                                }
                            }
                        };
                    } else {
                        // For pie and doughnut charts, configure legend labels
                        config.options.plugins.legend.labels = {
                            padding: 20,
                            usePointStyle: true
                        };
                    }

                    productChart = new Chart(ctx, config);
                }
            }

            // Initialize Category Chart with dynamic type
            function initCategoryChart(type = 'pie') {
                if (categoryChart) {
                    categoryChart.destroy();
                }

                if (document.getElementById('categoryChart')) {
                    const ctx = document.getElementById('categoryChart').getContext('2d');

                    const config = {
                        type: type,
                        data: {
                            labels: chartData.categories.labels,
                            datasets: [{
                                label: 'Revenue (â‚¹)',
                                data: chartData.categories.values,
                                backgroundColor: type === 'bar' ?
                                    'rgba(54, 185, 204, 0.8)' :
                                    colors.gradient.slice(0, chartData.categories.labels.length),
                                borderColor: '#ffffff',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: type !== 'bar',
                                    position: 'bottom',
                                    labels: {
                                        padding: 20,
                                        usePointStyle: true
                                    }
                                },
                                tooltip: {
                                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                    titleColor: '#ffffff',
                                    bodyColor: '#ffffff',
                                    borderColor: '#36b9cc',
                                    borderWidth: 1,
                                    callbacks: {
                                        title: function(context) {
                                            return context[0].label + ' Category';
                                        },
                                        label: function(context) {
                                            const quantity = chartData.categories.quantities[context.dataIndex];
                                            const productCount = chartData.categories.productCounts[context.dataIndex];
                                            const orderCount = chartData.categories.orderCounts[context.dataIndex];

                                            if (type === 'bar') {
                                                return [
                                                    'Revenue: â‚¹' + context.parsed.y.toLocaleString('en-IN'),
                                                    'Items Sold: ' + quantity,
                                                    'Products: ' + productCount,
                                                    'Orders: ' + orderCount
                                                ];
                                            } else {
                                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                                return [
                                                    'Revenue: â‚¹' + context.parsed.toLocaleString('en-IN'),
                                                    'Items Sold: ' + quantity,
                                                    'Products: ' + productCount,
                                                    'Orders: ' + orderCount,
                                                    'Market Share: ' + percentage + '%'
                                                ];
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    };

                    // Add scales for bar chart
                    if (type === 'bar') {
                        config.options.plugins.legend.display = true;
                        config.options.plugins.legend.position = 'top';
                        config.options.scales = {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return 'â‚¹' + value.toLocaleString('en-IN');
                                    }
                                }
                            },
                            x: {
                                ticks: {
                                    maxRotation: 45,
                                    minRotation: 0
                                }
                            }
                        };
                    }

                    categoryChart = new Chart(ctx, config);
                }
            }

            // Debug: Log chart data
            console.log('Chart Data:', chartData);

            // Validate data before initializing charts
            if (chartData.products.labels.length === 0) {
                console.warn('No product data available');
                document.getElementById('topProductsChart').parentElement.innerHTML =
                    '<div class="text-center p-4"><i class="fas fa-info-circle text-muted"></i><br>No product sales data available for the selected period</div>';
            }

            if (chartData.categories.labels.length === 0) {
                console.warn('No category data available');
                document.getElementById('categoryChart').parentElement.innerHTML =
                    '<div class="text-center p-4"><i class="fas fa-info-circle text-muted"></i><br>No category sales data available for the selected period</div>';
            }

            // Initialize all charts
            initRevenueChart();
            initPaymentChart();

            if (chartData.products.labels.length > 0) {
                initProductChart('bar');
            }

            if (chartData.categories.labels.length > 0) {
                initCategoryChart('pie');
            }

            // Chart type change handlers
            document.querySelectorAll('input[name="productChartType"]').forEach(radio => {
                radio.addEventListener('change', function() {
                    if (this.checked) {
                        initProductChart(this.value);
                    }
                });
            });

            document.querySelectorAll('input[name="categoryChartType"]').forEach(radio => {
                radio.addEventListener('change', function() {
                    if (this.checked) {
                        initCategoryChart(this.value);
                    }
                });
            });

        } catch (error) {
            console.error('Error initializing charts:', error);
            // Show error message to user
            const errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger alert-dismissible fade show';
            errorAlert.innerHTML = `
                <strong>Chart Error!</strong> Failed to load charts: ${error.message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            document.querySelector('.main-content').prepend(errorAlert);
        }
    });

    // Add chart utility functions
    function downloadChart(chartId, filename) {
        const canvas = document.getElementById(chartId);
        const link = document.createElement('a');
        link.download = filename;
        link.href = canvas.toDataURL('image/png');
        link.click();
    }

    function printChart(chartId) {
        const canvas = document.getElementById(chartId);
        const win = window.open('');
        win.document.write("<img src='" + canvas.toDataURL() + "' onload='window.print();window.close()'/>");
    }

    // Show product details table
    function showProductDetails() {
        const table = document.getElementById('productDetailsTable');
        const tbody = document.getElementById('productDetailsBody');

        if (table.style.display === 'none') {
            // Populate table with product data
            tbody.innerHTML = '';
            const products = <%- JSON.stringify(topProductsData || {}) %>;

            if (products.fullNames && products.fullNames.length > 0) {
                products.fullNames.forEach((name, index) => {
                    const row = tbody.insertRow();
                    row.innerHTML = `
                        <td><strong>${name}</strong></td>
                        <td>â‚¹${products.values[index].toLocaleString('en-IN')}</td>
                        <td>${products.quantities[index]}</td>
                        <td>${products.orderCounts[index]}</td>
                        <td>â‚¹${products.averagePrices[index].toFixed(2)}</td>
                    `;
                });
            }

            table.style.display = 'block';
        } else {
            table.style.display = 'none';
        }
    }

    // Show category details table
    function showCategoryDetails() {
        const table = document.getElementById('categoryDetailsTable');
        const tbody = document.getElementById('categoryDetailsBody');

        if (table.style.display === 'none') {
            // Populate table with category data
            tbody.innerHTML = '';
            const categories = <%- JSON.stringify(categoryData || {}) %>;

            if (categories.labels && categories.labels.length > 0) {
                const total = categories.values.reduce((a, b) => a + b, 0);

                categories.labels.forEach((name, index) => {
                    const percentage = ((categories.values[index] / total) * 100).toFixed(1);
                    const row = tbody.insertRow();
                    row.innerHTML = `
                        <td><strong>${name}</strong></td>
                        <td>â‚¹${categories.values[index].toLocaleString('en-IN')}</td>
                        <td>${categories.quantities[index]}</td>
                        <td>${categories.productCounts[index]}</td>
                        <td>${categories.orderCounts[index]}</td>
                        <td>${percentage}%</td>
                    `;
                });
            }

            table.style.display = 'block';
        } else {
            table.style.display = 'none';
        }
    }

    // AJAX pagination functions
    let currentOrdersPage = <%= pagination.orders.currentPage %>;
    let currentProductsPage = <%= pagination.products.currentPage %>;

    function loadOrdersPage(page) {
        if (page < 1) return;

        // Show loading state
        const tbody = document.querySelector('#recentOrdersTable tbody');
        tbody.innerHTML = '<tr><td colspan="6" class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>';

        fetch(`/admin/dashboard/orders?page=${page}&limit=5`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    updateOrdersTable(data.orders);
                    updateOrdersPagination(data.pagination);
                    currentOrdersPage = page;
                } else {
                    throw new Error(data.error || 'Failed to load orders');
                }
            })
            .catch(error => {
                console.error('Error loading orders:', error);
                tbody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">Error loading orders</td></tr>';
            });
    }

    function loadProductsPage(page) {
        if (page < 1) return;

        // Show loading state
        const tbody = document.querySelector('#latestProductsTable tbody');
        tbody.innerHTML = '<tr><td colspan="6" class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>';

        fetch(`/admin/dashboard/products?page=${page}&limit=5`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    updateProductsTable(data.products);
                    updateProductsPagination(data.pagination);
                    currentProductsPage = page;
                } else {
                    throw new Error(data.error || 'Failed to load products');
                }
            })
            .catch(error => {
                console.error('Error loading products:', error);
                tbody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">Error loading products</td></tr>';
            });
    }

    function updateOrdersTable(orders) {
        const tbody = document.querySelector('#recentOrdersTable tbody');
        tbody.innerHTML = '';

        if (orders && orders.length > 0) {
            orders.forEach(order => {
                const statusClass = order.status === 'Delivered' ? 'success' :
                                  order.status === 'Cancelled' ? 'danger' :
                                  order.status === 'Shipped' ? 'info' : 'warning';

                const row = tbody.insertRow();
                row.innerHTML = `
                    <td>#${order.orderId}</td>
                    <td>${order.customer}</td>
                    <td>${order.date}</td>
                    <td>${order.amount}</td>
                    <td><span class="badge bg-${statusClass}">${order.status}</span></td>
                    <td>
                        <a href="/admin/orders/${order._id}" class="btn btn-sm btn-info">
                            <i class="fas fa-eye"></i>
                        </a>
                    </td>
                `;
            });
        } else {
            tbody.innerHTML = '<tr><td colspan="6" class="text-center">No orders found</td></tr>';
        }
    }

    function updateProductsTable(products) {
        const tbody = document.querySelector('#latestProductsTable tbody');
        tbody.innerHTML = '';

        if (products && products.length > 0) {
            products.forEach(product => {
                const stockClass = product.stock > 0 ? (product.stock < 10 ? 'text-danger' : 'text-success') : 'text-danger';
                const stockText = product.stock > 0 ? product.stock : 'Out of Stock';

                const row = tbody.insertRow();
                row.innerHTML = `
                    <td>#${product.productId}</td>
                    <td>${product.name}</td>
                    <td>${product.category}</td>
                    <td>${product.price}</td>
                    <td><span class="${stockClass}">${stockText}</span></td>
                    <td>
                        <a href="/admin/products/${product._id}" class="btn btn-sm btn-info">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a href="/admin/products/edit/${product._id}" class="btn btn-sm btn-warning">
                            <i class="fas fa-edit"></i>
                        </a>
                    </td>
                `;
            });
        } else {
            tbody.innerHTML = '<tr><td colspan="6" class="text-center">No products found</td></tr>';
        }
    }

    function updateOrdersPagination(pagination) {
        const infoElement = document.getElementById('ordersInfo');
        const paginationElement = document.getElementById('ordersPagination');

        // Update info text
        const start = ((pagination.currentPage - 1) * pagination.limit) + 1;
        const end = Math.min(pagination.currentPage * pagination.limit, pagination.totalItems);
        infoElement.textContent = `Showing ${start} to ${end} of ${pagination.totalItems} orders`;

        // Update pagination buttons
        let paginationHTML = '';

        // Previous button
        const prevDisabled = pagination.currentPage === 1 ? 'disabled' : '';
        paginationHTML += `
            <li class="page-item ${prevDisabled}">
                <a class="page-link" href="#" onclick="loadOrdersPage(${pagination.currentPage - 1}); return false;" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        `;

        // Page numbers
        const startPage = Math.max(1, pagination.currentPage - 2);
        const endPage = Math.min(pagination.totalPages, startPage + 4);

        for (let i = startPage; i <= endPage; i++) {
            const activeClass = pagination.currentPage === i ? 'active' : '';
            paginationHTML += `
                <li class="page-item ${activeClass}">
                    <a class="page-link" href="#" onclick="loadOrdersPage(${i}); return false;">${i}</a>
                </li>
            `;
        }

        // Next button
        const nextDisabled = pagination.currentPage === pagination.totalPages ? 'disabled' : '';
        paginationHTML += `
            <li class="page-item ${nextDisabled}">
                <a class="page-link" href="#" onclick="loadOrdersPage(${pagination.currentPage + 1}); return false;" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        `;

        paginationElement.innerHTML = paginationHTML;
    }

    function updateProductsPagination(pagination) {
        const infoElement = document.getElementById('productsInfo');
        const paginationElement = document.getElementById('productsPagination');

        // Update info text
        const start = ((pagination.currentPage - 1) * pagination.limit) + 1;
        const end = Math.min(pagination.currentPage * pagination.limit, pagination.totalItems);
        infoElement.textContent = `Showing ${start} to ${end} of ${pagination.totalItems} products`;

        // Update pagination buttons
        let paginationHTML = '';

        // Previous button
        const prevDisabled = pagination.currentPage === 1 ? 'disabled' : '';
        paginationHTML += `
            <li class="page-item ${prevDisabled}">
                <a class="page-link" href="#" onclick="loadProductsPage(${pagination.currentPage - 1}); return false;" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        `;

        // Page numbers
        const startPage = Math.max(1, pagination.currentPage - 2);
        const endPage = Math.min(pagination.totalPages, startPage + 4);

        for (let i = startPage; i <= endPage; i++) {
            const activeClass = pagination.currentPage === i ? 'active' : '';
            paginationHTML += `
                <li class="page-item ${activeClass}">
                    <a class="page-link" href="#" onclick="loadProductsPage(${i}); return false;">${i}</a>
                </li>
            `;
        }

        // Next button
        const nextDisabled = pagination.currentPage === pagination.totalPages ? 'disabled' : '';
        paginationHTML += `
            <li class="page-item ${nextDisabled}">
                <a class="page-link" href="#" onclick="loadProductsPage(${pagination.currentPage + 1}); return false;" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        `;

        paginationElement.innerHTML = paginationHTML;
    }
    </script>
<%- include("partials/footer") %>